{"version":3,"sources":["assets/img/react-logo.png","assets/img/anime3.png","variables/charts.js","assets/img/farmer.jpeg","assets/icons/edit.svg","assets/icons/pulse-loader.svg","assets/icons/Dashboard.svg","assets/icons/Users icon.svg","assets/icons/Alerts icon.svg","assets/icons/Device Management.svg","assets/icons/Support.svg","assets/icons/Access Icon.svg","components/Sidebar/Sidebar.js","components/Navbars/sicca-adminNavbar.js","components/Footer/Footer.js","Utils/Common.js","config.js","views/Individual.js","views/Dashboard.js","views/Users.js","views/Alerts.js","routes.js","Utils/PrivateRoute.js","layouts/sicca-admin/sicca-admin.js","components/Login/Login.js","index.js","assets/icons/calendar.svg","assets/icons/farmer.png"],"names":["module","exports","chart1_2_options","layout","padding","left","right","top","bottom","maintainAspectRatio","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","legend","fillStyle","display","scales","yAxes","ticks","fontColor","fontSize","beginAtZero","callback","value","index","values","maxTicksLimit","xAxes","gridLines","drawTicks","drawBorder","color","zeroLineColor","zeroLineWidth","chartExample2","data","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","options","bar1_2_options","barThickness","pump_options","min","stepSize","chartExample3","hoverBackgroundColor","responsive","suggestedMin","suggestedMax","chartExample4","barPercentage","ps","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","this","removeEventListener","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","placeholder","UncontrolledDropdown","nav","DropdownToggle","href","alt","src","require","React","Component","Footer","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","ref","map","prop","key","redirect","path","pro","to","activeClassName","rtlName","name","icon","iconClass","defaultProps","getToken","sessionStorage","getItem","token","localStorage","instance","axios","create","baseURL","headers","AlertHistory","Card","CardHeader","CardTitle","tag","CardBody","Table","s","i","createdAt","Date","created_at","toISOString","replace","date","Moment","format","time","text","Individual","setBgChartData","bigChartData","statusUser","statusSicca","statusNode","wp","fc","waterGraphlabel","waterGraphConsumed","waterGraphSaved","energyGraphlabel","energyGraphConsumed","energyGraphSaved","pumpGraphlabel","pumpActivity","totalAcres","bigChartData1","energyGraph","pumpGraph","allNotifications","notificationsCount","pageIndex","totalPages","visible","nodeId","showAlertHistoryFlag","loadMore","match","params","all","get","then","spread","response","user","sicca","length","node","waterGraphlabels","waterGraphc","waterGraphs","activity","push","avg_consumed","avg_saved","energyGraphlabels","energyGraphc","energyGraphs","totalConsumed","totalSaved","pumpGraphlabels","pumpGraphh","totalHours","catch","error","console","log","selectval","bar2_2_options","lastIndexReached","Math","ceil","count","resp","prev","loadNotifications","sm","sm_status","waterlabels","watersaved","waterconsumed","waterGraphDashboard","data1","ctx","gradientFill","pointHoverBorderColor","data2","energylabels","energysaved","energyconsumed","energyGraphDashboard","purple_orange_gradient","dataPointWidth","hoverBorderWidth","hoverBorderColor","pumplabels","pumpactivity","pumpGraphDashboard","irigationOption","charAt","sm1","sm2","sm3","pumpStatus","lastUpdatedAt","soil_moist_remark","atm_temp_remark","soil_temp_remark","hum_remark","light_remark","soil_temp","atm_temp","humid","sunlight","temp","hum","light","updatedAt","tm","Row","Col","lg","md","ms","cropName","style","opacity","nodeName","valveStatus","areaSize","xs","defaultChecked","htmlFor","height","marginBottom","onChange","event","target","updatePumpGraph","marginTop","updateGraph","Button","Dashboard","dashboardStatus","failedNotifications","failedNotificationsCount","refsh","interceptors","request","use","req","Authorization","status","loadFailedNotifications","totalUsers","totalConnected","profile_pic","SpinnerLoad","Users","usersArr","usersArrCount","isloading","loadUsers","output","updated_at","total_land_size","nodelist","nodes","n","j","nodeInfo","node_id","crop_name","nodeCreatedAt","nodeDate","Alerts","component","DeviceManagement","Support","AccessControl","PrivateRoute","rest","render","from","Admin","toggle","getRoutes","handleBgClick","getBrandText","mainPanel","tables","querySelectorAll","e","history","action","scrollTop","scrollingElement","outterLink","imgSrc","brandText","exact","useFormInput","initialValue","useState","setValue","Login","email","password","setError","loading","setLoading","autoComplete","post","BASE_URL","setItem","setUserSession","setTimeout","message","disabled","hist","createBrowserHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8f07c95d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","// import { instance} from \"react-chartjs-2\";\n\n// ##############################\n// // // Chart variables\n// #############################\n\nlet chart1_2_options = {\n  layout: {\n    padding: {\n      left: 20,\n      right: 20,\n      top: 0,\n      bottom: 0\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: '#fff',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 8,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  legend: {\n    position: \"bottom\",\n    fillStyle: \"#fff\",\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        fontColor: \"rgba(255,255,255,0.8)\",\n        fontSize: 14,\n        beginAtZero:true,\n          callback: function(value, index, values) {\n            if(value === 0){\n              return 'Litres';\n            }\n            else{\n              return value;\n            }\n          },\n        maxTicksLimit: 10,\n        padding: 5,\n        \n        // min:0,\n        // stepSize: 1000\n      },\n      \n\n    }],\n    xAxes: [{\n      // gridLines: {\n      //   zeroLineColor: \"transparent\",\n      //   display: false,\n\n      // },\n      gridLines: {\n        drawTicks: true,\n        drawBorder: false,\n        display: true,\n        color: \"rgba(255,255,255,0.1)\",\n        zeroLineColor: \"rgba(255,255,255,0.1)\",\n        zeroLineWidth:1\n      },\n      ticks: {\n        padding: 10,\n        fontColor: \"rgba(255,255,255,0.8)\",\n        fontSize: 16,\n      }\n    }]\n  }\n};\nlet bar1_2_options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor:\"#bbb\",\n          beginAtZero:false,\n          callback: function(value, index, values) {\n            if(value === 0){\n              return 'Kwh';\n            }\n            else{\n              return value;\n            }\n          },\n          maxTicksLimit: 5,\n              \n        }\n      }],\n      xAxes: [{\n        ticks: {\n          fontColor:\"#bbb\"\n        },\n        barThickness: 20\n      }]\n    },\n    legend: {\n      display: false\n    },\n  \n};\n\nlet pump_options = {\n  scales: {\n    yAxes: [{\n      ticks: {\n        fontColor:\"#bbb\",\n        beginAtZero:true,\n        maxTicksLimit: 5,\n        padding: 10,\n        min:0,\n        stepSize: 5\n      },\n\n    }],\n    xAxes: [{\n        ticks: {\n          fontColor:\"#bbb\"\n        },\n        barThickness: 20\n      }]\n    },\n    legend: {\n      labels: {\n            fontColor: \"#fff\"\n        },\n      display: false\n  },\n}\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nmodule.exports = {\n  chart1_2_options,\n  bar1_2_options,\n  pump_options,\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4 // in src/views/Dashboard.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/farmer.2b0af8e3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/edit.f6ecbfdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/pulse-loader.387f0057.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dashboard.9f4a9bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Users icon.ee03d0ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/Alerts icon.50c35db6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Device Management.3c72d947.svg\";","module.exports = __webpack_public_path__ + \"static/media/Support.7eb07b6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Access Icon.1be125c1.svg\";","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    // let logoImg = null;\n    // let logoText = null;\n    // if (logo !== undefined) {\n    //   if (logo.outterLink !== undefined) {\n    //     logoImg = (\n    //       <a\n    //         href={logo.outterLink}\n    //         className=\"simple-text logo-mini\"\n    //         target=\"_blank\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         <div className=\"logo-img\">\n    //           <img src={logo.imgSrc} alt=\"react-logo\" />\n    //         </div>\n    //       </a>\n    //     );\n    //     logoText = (\n    //       <a\n    //         href={logo.outterLink}\n    //         className=\"simple-text logo-normal\"\n    //         target=\"_blank\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         {logo.text}\n    //       </a>\n    //     );\n    //   } else {\n    //     logoImg = (\n    //       <Link\n    //         to={logo.innerLink}\n    //         className=\"simple-text logo-mini\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         <div className=\"logo-img\">\n    //           <img src={logo.imgSrc} alt=\"react-logo\" />\n    //         </div>\n    //       </Link>\n    //     );\n    //     logoText = (\n    //       <Link\n    //         to={logo.innerLink}\n    //         className=\"simple-text logo-normal\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         {logo.text}\n    //       </Link>\n    //     );\n    //   }\n    // }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {/* {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null} */}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    <img src={prop.icon} className={prop.iconClass} />\n                    \n                  </NavLink>\n                </li>\n              );\n            })}\n            \n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Navbar,\n  NavLink,\n  Nav,\n  Container\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              \n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav navbar>\n              <form>\n                <div className=\"input-group no-border\">\n                  <input type=\"text\" className=\"search-bar\" placeholder=\"Search Farmer/SICCA device\" />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <i className=\"tim-icons icon-zoom-split\"></i>\n                    </div>\n                  </div>\n                </div>\n              </form>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    {/* <div className=\"notification d-none d-lg-block d-xl-block\" /> */}\n                    <i className=\"tim-icons icon-bell-55\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  {/* <DropdownMenu className=\"dropdown-navbar notifications\" right tag=\"ul\">\n                  </DropdownMenu> */}\n                </UncontrolledDropdown>\n                <li><a className=\"nav-link\" href=\"#\">\n                  <i className=\"tim-icons icon-settings-gear-63\"></i>\n                </a></li>  \n                <li className=\"separator d-lg-none\" />\n              </Nav>\n              <p className=\"adminName\">Hi, Admin</p>\n              <div className=\"photo\">\n                <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n              </div>\n            </Collapse>\n            \n          </Container>\n        </Navbar>\n      \n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            {/* <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\">Creative Tim</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/presentation?ref=bdr-user-archive-footer\">About Us</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/blog?ref=bdr-user-archive-footer\">Blog</NavLink>\n            </NavItem> */}\n          </Nav>\n          \n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// return the user data from the session storage\nexport const getUser = () => {\n    const userStr = sessionStorage.getItem('user');\n    if (userStr) return JSON.parse(userStr);\n    else return null;\n  }\n  \n  // return the token from the session storage\n  export const getToken = () => {\n    return sessionStorage.getItem('token') || null;\n  }\n  \n  // remove the token and user from the session storage\n  export const removeUserSession = () => {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n  }\n  \n  // set the token and user from the session storage\n  export const setUserSession = (token) => {\n    sessionStorage.setItem('token', token);\n    // sessionStorage.setItem('user', JSON.stringify(user));\n  }","import axios from \"axios\";\nimport { getToken } from \"Utils/Common\";\nlet token = localStorage.getItem('token');\nif(token == null){\n  token = getToken();\n}\nconst instance = axios.create({\n    baseURL: 'http://34.93.137.80/api/sicca-admin',\n    // timeout: 10000,\n    headers: {'Authorization': token}\n  });\n\n  export default instance;","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n// import { node } from \"prop-types\";\n\nconst AlertHistory = ({data}) =>(\n    <Card>\n        <CardHeader>\n            <CardTitle tag=\"h4\">Notifications</CardTitle>\n        </CardHeader>\n        <CardBody>\n            <Table className=\"tablesorter\" id=\"failednotification\">\n                <thead className=\"text-primary\">\n                    <tr>\n                        <th>Reason</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((s, i) => {\n\t\t\tlet createdAt = new Date(s.created_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                        let date = Moment(createdAt).format('L');\n                        let time = Moment(createdAt).format('HH:mm:ss');\n                        return (\n                            <tr key={i}>\n                                <td>{s.text}</td>\n                                <td>{date}</td>\n                                <td>{time}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </CardBody>        \n    </Card>\n);\n\nclass Individual extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      statusUser:[],\n      statusSicca:[],\n      statusNode:[],\n      wp:720,\n      fc:440,\n      waterGraphlabel : [],\n      waterGraphConsumed : [],\n      waterGraphSaved : [],\n      energyGraphlabel : [],\n      energyGraphConsumed : [],\n      energyGraphSaved : [],\n      pumpGraphlabel : [],\n      pumpActivity : [],\n      totalAcres:\"--\",\n      bigChartData: \"data1\",\n      bigChartData1:\"data2\",\n      energyGraph:1,\n      pumpGraph:1,\n      allNotifications : [],\n      notificationsCount:1,\n      pageIndex: 0,\n      totalPages:1,\n      visible : 10,\n      nodeId:0,\n      showAlertHistoryFlag:false,\n    };\n    this.loadMore = this.loadMore.bind(this);\n  }\n  \n  componentDidMount() {\n    if (this.props.match.params) {\n        this.setState({nodeId:this.props.match.params.nodeId})\n        axios.all([\n        instance.get('node/details/'+this.props.match.params.nodeId),\n        instance.get('node/water/graph/'+this.props.match.params.nodeId),\n        instance.get('node/energy/graph/'+this.props.match.params.nodeId+'/1'),\n        instance.get('node/pump/activity/graph/'+this.props.match.params.nodeId+'/1')\n        ])\n        .then(axios.spread((...response) => {\n        let statusUser = response[0].data.user[0];\n        let statusSicca;\n        if(response[0].data.sicca.length!==0){\n          statusSicca = response[0].data.sicca[0];\n        }\n        else{\n          statusSicca = null;\n        }\n        \n        let statusNode = response[0].data.node;\n        let waterGraphlabels=[];\n        let waterGraphc =[]\n        let waterGraphs=[];\n        if(response[1].data.activity.length !== 0){\n          for (var i = 0; i < response[1].data.activity.length; i++) {\n            \n            waterGraphlabels.push(response[1].data.activity[i].created_at);\n            waterGraphc.push(response[1].data.activity[i].avg_consumed);\n            waterGraphs.push(response[1].data.activity[i].avg_saved);\n          }\n        }\n        let energyGraphlabels=[];\n        let energyGraphc =[]\n        let energyGraphs=[];\n        if(response[2].data.activity.length !== 0){\n          for (i = 0; i < response[2].data.activity.length; i++) {\n              \n              energyGraphlabels.push(response[2].data.activity[i].created_at);\n              energyGraphc.push(response[2].data.activity[i].totalConsumed);\n              energyGraphs.push(response[2].data.activity[i].totalSaved);\n          }\n        }\n        let pumpGraphlabels=[];\n        let pumpGraphh =[];\n        if(response[3].data.activity.length !== 0){\n          for ( i = 0; i < response[3].data.activity.length; i++) {\n              \n              pumpGraphlabels.push(response[3].data.activity[i].created_at);\n              pumpGraphh.push(response[3].data.activity[i].totalHours);\n      \n          }\n        }\n        this.setState({ statusUser:statusUser,statusSicca:statusSicca,statusNode:statusNode,waterGraphlabel:waterGraphlabels,waterGraphConsumed:waterGraphc,waterGraphSaved:waterGraphs,energyGraphlabel:energyGraphlabels,energyGraphConsumed:energyGraphc,energyGraphSaved:energyGraphs,pumpGraphlabel:pumpGraphlabels,pumpActivity:pumpGraphh });\n        }))\n        .catch(error => console.log(error));\n    }\n  }\n\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n\n  updateGraph(selectval){\n    axios.all([\n      instance.get('node/energy/graph/'+this.props.match.params.nodeId+'/'+selectval)\n    ])\n    .then(axios.spread((response) => {\n      let energyGraphlabels=[];\n      let energyGraphc =[]\n      let energyGraphs=[];\n      for (var i = 0; i < response.data.activity.length; i++) {\n        energyGraphlabels.push(response.data.activity[i].created_at);\n        energyGraphc.push(response.data.activity[i].totalConsumed);\n        energyGraphs.push(response.data.activity[i].totalSaved);\n      }\n      this.setState({ energyGraphlabel:energyGraphlabels,energyGraphConsumed:energyGraphc,energyGraphSaved:energyGraphs });\n      let energylabels = this.state.energyGraphlabel;\n      let energysaved = this.state.energyGraphSaved;\n      let energyconsumed = this.state.energyGraphConsumed;\n      //console.log(energylabels)\n      let energyGraphDashboard = {\n      data1: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n\n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: energyGraphlabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energyGraphs\n          }]\n        };\n      },\n      data2: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n    \n        return {\n          labels: energyGraphlabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energyGraphc\n          }]\n        };\n      },\n      options: bar2_2_options\n      };\n    \n    }))\n    .catch(error => console.log(error));\n\n  }\n\n  updatePumpGraph(selectval){\n    axios.all([\n      instance.get('/node/pump/activity/graph/'+this.props.match.nodeId+'/'+selectval)\n    ])\n    .then(axios.spread((response) => {\n      let pumpGraphlabels=[];\n      let pumpGraphh =[]\n      for (var i = 0; i < response.data.activity.length; i++) {\n        pumpGraphlabels.push(response.data.activity[i].created_at);\n        pumpGraphh.push(response.data.activity[i].totalHours);\n      }\n      this.setState({ pumpGraphlabel:pumpGraphlabels,pumpActivity:pumpGraphh});\n      let pumpGraphDashboard = {\n        data1: canvas => {\n          // let chartColor = \"#035272\";\n          // var yLabels = {0 : 'newb'}\n          let bar_ctx = canvas.getContext(\"2d\");\n    \n          var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n          purple_orange_gradient.addColorStop(0, '#00727b');\n          purple_orange_gradient.addColorStop(1, '#000a55');\n    \n      \n          return {\n            type: 'bar',\n            dataPointWidth: 20,\n            labels: pumpGraphlabels,\n            datasets: [{\n              label: '',\n              fill:true,\n              borderWidth: 0.5,\n              data: pumpGraphh,\n              backgroundColor: purple_orange_gradient,\n              hoverBackgroundColor: purple_orange_gradient,\n              hoverBorderWidth: 1,\n              hoverBorderColor: '#000a55'\n          }]\n          };\n        },\n        options: pump_options\n      };\n    \n    }))\n    .catch(error => console.log(error));\n\n  }\n  \n  loadNotifications(){\n    let index = this.state.pageIndex+1;\n    axios.all([\n      instance.get('/user/notifications/each/'+this.props.match.params.nodeId+'/'+index)\n    ])\n    .then(axios.spread((response) => {\n\n        this.setState({showAlertHistoryFlag:true});\n\n      if(this.state.totalPages > this.state.pageIndex){\n        this.setState({pageIndex:this.state.pageIndex+1})\n      }\n      else{\n        this.setState({lastIndexReached:true})\n      }\n      if(this.state.lastIndexReached === false){\n        this.setState({totalPages:Math.ceil(response.data.count/10)});\n      }\n      \n      this.setState({ allNotifications:[...this.state.allNotifications,...response.data.resp],notificationsCount:response.data.count });\n      \n    }))\n    .catch(error => console.log(error));\n  }\n\n  loadMore() {\n    this.setState((prev) => {\n      return {pageIndex: prev.pageIndex + 1,visible:prev.visible+10};\n    });\n    this.loadNotifications();\n\n  }\n  \n  render() {\n    let waterlabels = this.state.waterGraphlabel;\n    let watersaved = this.state.waterGraphSaved;\n    let waterconsumed = this.state.waterGraphConsumed;\n    // console.log(waterconsumed)\n    let waterGraphDashboard = {\n      data1: canvas => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000,0,500, 0, 100, 0);\n        gradientStroke.addColorStop(0, '#035272');\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(0, 1900,400,1300, 800,1600, 50);\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n    \n        return {\n          labels: waterlabels,\n          datasets: [{\n            label: \"Data\",\n            borderColor: chartColor,\n            pointBorderColor: chartColor,\n            pointBackgroundColor: \"#1e3d60\",\n            pointHoverBackgroundColor: \"#1e3d60\",\n            pointHoverBorderColor: chartColor,\n            pointBorderWidth: 1,\n            pointHoverRadius: 7,\n            pointHoverBorderWidth: 2,\n            pointRadius: 2,\n            fill: false,\n            backgroundColor: gradientFill,\n            borderWidth: 6,\n            data: watersaved\n          }]\n        };\n      },\n      data2: canvas => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000,0,500, 0, 100, 0);\n        gradientStroke.addColorStop(0, '#035272');\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(0, 1900,400,1300, 800,1600, 50);\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n    \n        return {\n          labels: waterlabels,\n          datasets: [{\n            label: \"Data\",\n            borderColor: chartColor,\n            pointBorderColor: chartColor,\n            pointBackgroundColor: \"#1e3d60\",\n            pointHoverBackgroundColor: \"#1e3d60\",\n            pointHoverBorderColor: chartColor,\n            pointBorderWidth: 1,\n            pointHoverRadius: 7,\n            pointHoverBorderWidth: 2,\n            pointRadius: 2,\n            fill: false,\n            backgroundColor: gradientFill,\n            borderWidth: 6,\n            data: waterconsumed\n          }]\n        };\n      },\n      options: chart1_2_options\n    };\n\n    let energylabels = this.state.energyGraphlabel;\n    let energysaved = this.state.energyGraphSaved;\n    let energyconsumed = this.state.energyGraphConsumed;\n\n    let energyGraphDashboard = {\n      data1: canvas => {\n        let chartColor = \"#035272\";\n        var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n  \n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: energylabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energysaved\n          }]\n        };\n      },\n      data2: canvas => {\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n    \n        return {\n          labels: energylabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            data: energyconsumed,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55'\n        }]\n            \n        };\n      },\n      options: bar1_2_options\n    };\n\n    let pumplabels = this.state.pumpGraphlabel;\n    let pumpactivity = this.state.pumpActivity;\n    \n    let pumpGraphDashboard = {\n      data1: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n  \n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: pumplabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            data: pumpactivity,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55'\n        }]\n        };\n      },\n      options: pump_options\n    };\n    const fc = this.state.fc;\n    const wp = this.state.wp;\n    let sm;\n  \n    if(this.state.statusNode.irigationOption){\n        if(this.state.statusNode.irigationOption.charAt(0) === 1){\n            sm = this.state.statusSicca.sm1;\n        }\n        else if(this.state.statusNode.irigationOption.charAt(0) === 4){\n            sm = this.state.statusSicca.sm2;\n        }\n        else if(this.state.statusNode.irigationOption.charAt(0) === 8){\n            sm = this.state.statusSicca.sm3;\n        }\n    }\n    \n    let sm_status;\n    if(this.state.statusNode.pumpStatus===1){\n        if(sm=>fc){\n            sm_status = 'DRY';\n        }\n        else if(sm < fc){\n            sm_status = 'WET';\n        }\n    }\n    else{\n        if(fc > sm){\n            sm_status = 'WET';\n        }\n        else if(sm => fc && sm < wp){\n            sm_status = 'WET';\n        }\n        else if(sm > wp){\n            sm_status = 'DRY';\n        }\n    }\n\n    let soil_moist_remark='bg-blue';\n    let atm_temp_remark='bg-blue';\n    let soil_temp_remark='bg-blue';\n    let hum_remark='bg-blue';\n    let light_remark='bg-blue';\n    let soil_temp = \"--\";\n    let atm_temp = \"--\";\n    let humid = \"--\";\n    let sunlight = \"--\";\n\n    if(this.state.statusSicca != null){\n      \n      (this.state.statusSicca.temp>=100 || this.state.statusSicca.temp<=1000)?soil_moist_remark='bg-blue':soil_moist_remark='bg-red'\n\n      if(this.state.statusSicca.temp){\n        atm_temp = this.state.statusSicca.temp+\"°C\";\n        (this.state.statusSicca.temp>=0 || this.state.statusSicca.temp<=100)?atm_temp_remark='bg-blue':atm_temp_remark='bg-red'\n      }\n      \n      if(this.state.statusSicca.soil_temp){\n        soil_temp = this.state.statusSicca.soil_temp +\"°C\";\n        (this.state.statusSicca.soil_temp>=0 || this.state.statusSicca.soil_temp<=100)?soil_temp_remark='bg-blue':soil_temp_remark='bg-red'\n      }\n      \n      if(this.state.statusSicca.hum){\n        humid = this.state.statusSicca.hum+\"%\";\n        (this.state.statusSicca.hum>=0 || this.state.statusSicca.hum<=100)?hum_remark='bg-blue':hum_remark='bg-red'\n      }\n      \n      if(this.state.statusSicca.light){\n        sunlight = this.state.statusSicca.light;\n        this.state.statusSicca.light>=0 && this.state.statusSicca.light<=65000 ? light_remark='bg-blue':light_remark='bg-red'\n      }\n    }\n\n    let lastUpdatedAt;\n    if(this.state.statusNode.updatedAt){\n      let tm = new Date(this.state.statusNode.updatedAt).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n      lastUpdatedAt = Moment(tm).format('YYYY-MM-DD HH:mm:ss')\n    }\n\nreturn (\n      <>\n        <div className=\"content\">\n            <hr/>\n\n            <div className=\"ind-card\">\n                <Row className=\"top-cards-inline\">\n                \n                <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk\">\n                    <img alt=\"...\" src={require(\"assets/img/farmer.jpeg\")} className=\"ind-profile\" />\n                </Col>\n                <Col lg=\"2\" ms=\"8\" sm=\"4\" className=\"card-blk-2\">\n                    <div className=\"ind-name qwesd\">\n                        {/* <div className=\"dropdown\">\n                            <a className=\"dropdown-toggle btn-simple btn-icon srwer\" data-toggle=\"dropdown\" id=\"farmer_name\">--</a>    \n                        </div> */}\n                        <p className=\"ind_name\">{this.state.statusUser.name}</p>\n                    </div>\n                    <div className=\"ind-desc\">Node ID - <span id=\"ind_node\">{this.state.statusNode.nodeId} : {this.state.statusNode.cropName}</span></div>\n                    \n                    {this.state.statusNode.pumpStatus===\"1\"?<div className=\"ind-desc border-blue\" id=\"pump_status\">PUMP STATUS: <span className=\"color-blue\">ON</span></div> : <div className=\"ind-desc border-red\" id=\"pump_status\">PUMP STATUS: <span className=\"color-red\">OFF</span></div>}\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk\">\n                    <div className=\"fgrtws\">\n                        <div className=\"ind-desc qwesd\">Device ID: <span id=\"ind_id\">{this.state.statusUser.id}</span></div>\n                    <div className=\"ind-desc\" style={{opacity: \"0\"}}>Node ID - {this.state.statusNode.nodeId}:{this.state.statusNode.nodeName}</div>\n                    {this.state.statusNode.valveStatus===\"1\"?<div className=\"ind-desc border-blue\" id=\"valve_status\">VALVE STATUS: <span className=\"color-blue\">ON</span></div> : <div className=\"ind-desc border-red\" id=\"valve_status\">VALVE STATUS: <span className=\"color-red\">OFF</span></div>}\n                    </div>\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk-4\">\n                    <div className=\"fgrtws\">\n                    <div className=\"ind-desc qwesd\">Farm Size- <span id=\"farm_size\">{this.state.statusNode.areaSize?this.state.statusNode.areaSize:'--'}</span> Acres</div>\n                        <div className=\"ind-desc\" style={{opacity:\"0\"}}>Node ID - -:-</div>\n                        <div className=\"ind-desc border-gray\" id=\"dry_run\">Dry Run</div>\n                    </div>\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk\">\n                    <div className=\"fgrtws\">\n                        <img alt=\"...\" src={require(\"assets/icons/edit.svg\")} className=\"btn-edit\" />\n                    </div>\n                    <div className=\"ind-desc ereuj\"><span id=\"ind_updated\">{lastUpdatedAt}</span></div>\n\n                    <div className=\"ind-desc ereuj\"><span id=\"ind_updated\">{lastUpdatedAt?lastUpdatedAt:'--'}</span></div>\n\n                </Col>\n            </Row>\n            </div>\n\n            <Row className=\"top-cards-inline\">\n                <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n                    <Card className={soil_moist_remark}>\n               \n                        <CardBody>\n                    \n                            <h4 className=\"card-title\" id=\"soil_moist\">{sm?sm:'--'}</h4>\n                            <p className=\"card-text\">Soil Moisture</p>\n                \n                        </CardBody>\n                        <div className=\"card-footer\">\n                            <p className=\"card-text-bottom\" id=\"soil_moist_type\">{sm_status?sm_status:'--'}</p>\n                        </div>\n                    </Card>\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n                    <Card className={soil_temp_remark}>\n                \n                        <CardBody>\n                            <h4 className=\"card-title\" id=\"soil_temp\">{soil_temp}</h4>\n                            <p className=\"card-text\">Soil Temprature</p>\n                        </CardBody>\n                        <div className=\"card-footer\">\n                            <p className=\"card-text-bottom\" id=\"soil_temp_status\" style={{opacity:'0'}}>--</p>\n                        </div>\n                    </Card>\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n                    <Card className={atm_temp_remark}>\n                \n                        <CardBody>\n                            <h4 className=\"card-title\" id=\"atm_temp\">{atm_temp}</h4>\n                            <p className=\"card-text\">Atm. Temprature</p>\n                        </CardBody>\n                        <div className=\"card-footer\">\n                            <p className=\"card-text-bottom\" id=\"soil_atm_temp_status\" style={{opacity:'0'}}>--</p>\n                        </div>\n                    </Card>\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n                    <Card className={hum_remark}>\n               \n                        <CardBody>\n                            <h4 className=\"card-title\" id=\"humidity\">{humid}</h4>\n                            <p className=\"card-text\">Humidity</p>\n                        </CardBody>\n                        <div className=\"card-footer\">\n                            <p className=\"card-text-bottom\" id=\"soil_hum_status\" style={{opacity:'0'}}>--</p>\n                        </div>\n                    </Card>\n                </Col>\n                <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n                    <Card className={light_remark}>\n                \n                        <CardBody>\n                            <h4 className=\"card-title\" id=\"sunlight\">{sunlight}</h4>\n                            <p className=\"card-text\">Sunlight(lux)</p>\n                        </CardBody>\n                        <div className=\"card-footer\">\n                            <p className=\"card-text-bottom\" id=\"soil_sunlight_status\" style={{opacity:'0'}}>--</p>\n                        </div>\n                    </Card>\n                </Col>\n            </Row>\n            \n            <div className=\"alets-block color-red\" style={{display:\"none\"}}>\n                Critical Alert: Valve status is OFF | High Soil Temperature | High Atm. Temperature\n            </div>\n            \n            <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                  <Row>\n                    <div className=\"tab-frame\">\n                      <input type=\"radio\" defaultChecked name=\"tab\" id=\"tab1\" />\n                      <label htmlFor=\"tab1\" id=\"gdsrdd\">WATER SAVED</label>\n                      <label>|</label>  \n                      <input type=\"radio\" name=\"tab\" id=\"tab2\" />\n                      <label htmlFor=\"tab2\">WATER CONSUMED</label>\n             \n                      <div className=\"tab\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\" style={{height:'500px'}}>\n                            <Line\n                              data={waterGraphDashboard[this.state.bigChartData]}\n                              options={waterGraphDashboard.options}\n                            />\n                            \n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tab\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\" style={{height:'500px'}}>\n                            <Line\n                              data={waterGraphDashboard[this.state.bigChartData1]}\n                              options={waterGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </Row>\n              </Card>\n            </Col>\n          </Row>\n          \n            <Row>\n            <Col lg=\"6\">\n              <div style={{display: 'flex',marginBottom: '5px'}}>\n                <h5 className=\"card-category chart-header\">AVG. PUMP ACTIVITY</h5>\n                <span><img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} /></span>\n                <select id=\"energyselect\" className=\"select_box\" onChange={(event)=>{this.setState({pumpGraph:event.target.value});this.updatePumpGraph(event.target.value)}} value={this.state.pumpGraph}>\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                  <div className=\"chart-area\" style={{marginTop:'60px'}}>\n                    <Bar\n                      data={pumpGraphDashboard[this.state.bigChartData]}\n                      options={pumpGraphDashboard.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\">\n              <div style={{display: 'flex',marginBottom: '5px'}}>\n                <h5 className=\"card-category chart-header\">AVG. ENERGY</h5>\n                <span><img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} /></span>\n                <select id=\"energyselect\" className=\"select_box\" onChange={(event)=>{this.setState({energyGraph:event.target.value});this.updateGraph(event.target.value)}} value={this.state.energyGraph}>\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                <div className=\"tab-frame1\">\n                      <input type=\"radio\" defaultChecked name=\"tab1\" id=\"tab11\" />\n                      <label htmlFor=\"tab11\" id=\"gdsrdd\">SAVED</label>\n                      <label>|</label>  \n                      <input type=\"radio\" name=\"tab1\" id=\"tab22\" />\n                      <label htmlFor=\"tab22\">CONSUMED</label>\n             \n                      <div className=\"tab1\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\">\n                            <Bar\n                              data={energyGraphDashboard[this.state.bigChartData]}\n                              options={energyGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tab1\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\">\n                            <Bar\n                              data={energyGraphDashboard[this.state.bigChartData1]}\n                              options={energyGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n                  \n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          \n            <Row>\n            <Col lg=\"12\" md=\"12\">\n                {this.state.showAlertHistoryFlag?<AlertHistory data={this.state.allNotifications} />:<Button  onClick={()=>{this.loadNotifications()}} className=\"show-all-btn\">Show Alert History</Button>}\n                \n                {this.state.visible < this.state.notificationsCount &&\n                    <button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</button>\n                  }\n                  \n            </Col>\n          </Row>\n                    \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Individual;\n","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n\n\nclass Dashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dashboardStatus : [],\n      waterGraphlabel : [],\n      waterGraphConsumed : [],\n      waterGraphSaved : [],\n      energyGraphlabel : [],\n      energyGraphConsumed : [],\n      energyGraphSaved : [],\n      pumpGraphlabel : [],\n      pumpActivity : [],\n      totalAcres:\"--\",\n      bigChartData: \"data1\",\n      bigChartData1:\"data2\",\n      energyGraph:1,\n      pumpGraph:1,\n      failedNotifications : [],\n      failedNotificationsCount:1,\n      pageIndex: 0,\n      totalPages:1,\n      visible : 10,\n      refsh:false\n    };\n    this.loadMore = this.loadMore.bind(this);\n    \n  }\n  \n  componentDidMount() {\n    instance.interceptors.request.use(req => {\n      req.headers.Authorization = localStorage.getItem('token');\n      return req;\n    });\n    \n    axios.all([\n      instance.get('/dashboard/status'),\n      instance.get('/water/graph/all'),\n      instance.get('/energy/graph/all/1'),\n      instance.get('/pump/activity/all/1')\n    ])\n    .then(axios.spread((...response) => {\n      console.log(response)\n      let status = response[0].data;\n      let waterGraphlabels=[];\n      let waterGraphc =[]\n      let waterGraphs=[];\n      for (var i = 0; i < response[1].data.activity.length; i++) {\n        \n        waterGraphlabels.push(response[1].data.activity[i].created_at);\n        waterGraphc.push(response[1].data.activity[i].avg_consumed);\n        waterGraphs.push(response[1].data.activity[i].avg_saved);\n      }\n      let energyGraphlabels=[];\n      let energyGraphc =[]\n      let energyGraphs=[];\n      for (i = 0; i < response[2].data.activity.length; i++) {\n        \n        energyGraphlabels.push(response[2].data.activity[i].created_at);\n        energyGraphc.push(response[2].data.activity[i].avg_consumed);\n        energyGraphs.push(response[2].data.activity[i].avg_saved);\n      }\n      let pumpGraphlabels=[];\n      let pumpGraphh =[];\n      for (i = 0; i < response[3].data.activity.length; i++) {\n        \n        pumpGraphlabels.push(response[3].data.activity[i].created_at);\n        pumpGraphh.push(response[3].data.activity[i].totalHours);\n  \n      }\n      this.setState({ dashboardStatus: status,totalAcres:status.totalAcres.totalAcres,waterGraphlabel:waterGraphlabels,waterGraphConsumed:waterGraphc,waterGraphSaved:waterGraphs,energyGraphlabel:energyGraphlabels,energyGraphConsumed:energyGraphc,energyGraphSaved:energyGraphs,pumpGraphlabel:pumpGraphlabels,pumpActivity:pumpGraphh });\n      \n    }))\n    .catch(error => console.log(error));\n    this.loadFailedNotifications(this.state.pageIndex);\n  }\n\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n\n  updateGraph(selectval){\n    axios.all([\n      instance.get('/energy/graph/all/'+selectval)\n    ])\n    .then(axios.spread((response) => {\n      let energyGraphlabels=[];\n      let energyGraphc =[]\n      let energyGraphs=[];\n      for (var i = 0; i < response.data.activity.length; i++) {\n        energyGraphlabels.push(response.data.activity[i].created_at);\n        energyGraphc.push(response.data.activity[i].avg_consumed);\n        energyGraphs.push(response.data.activity[i].avg_saved);\n      }\n      this.setState({ energyGraphlabel:energyGraphlabels,energyGraphConsumed:energyGraphc,energyGraphSaved:energyGraphs });\n      let energylabels = this.state.energyGraphlabel;\n      let energysaved = this.state.energyGraphSaved;\n      let energyconsumed = this.state.energyGraphConsumed;\n      console.log(energylabels)\n      let energyGraphDashboard = {\n      data1: canvas => {\n        //var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n\n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: energyGraphlabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energyGraphs\n          }]\n        };\n      },\n      data2: canvas => {\n        \n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n    \n        return {\n          labels: energyGraphlabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energyGraphc\n          }]\n        };\n      },\n      options: bar2_2_options\n      };\n    \n    }))\n    .catch(error => console.log(error));\n\n  }\n\n  updatePumpGraph(selectval){\n    axios.all([\n      instance.get('/pump/activity/all/'+selectval)\n    ])\n    .then(axios.spread((response) => {\n      let pumpGraphlabels=[];\n      let pumpGraphh =[]\n      for (var i = 0; i < response.data.activity.length; i++) {\n        pumpGraphlabels.push(response.data.activity[i].created_at);\n        pumpGraphh.push(response.data.activity[i].totalHours);\n      }\n      this.setState({ pumpGraphlabel:pumpGraphlabels,pumpActivity:pumpGraphh});\n      let pumpGraphDashboard = {\n        data1: canvas => {\n          // let chartColor = \"#035272\";\n          // var yLabels = {0 : 'newb'}\n          let bar_ctx = canvas.getContext(\"2d\");\n    \n          var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n          purple_orange_gradient.addColorStop(0, '#00727b');\n          purple_orange_gradient.addColorStop(1, '#000a55');\n    \n      \n          return {\n            type: 'bar',\n            dataPointWidth: 20,\n            labels: pumpGraphlabels,\n            datasets: [{\n              label: '',\n              fill:true,\n              borderWidth: 0.5,\n              data: pumpGraphh,\n              backgroundColor: purple_orange_gradient,\n              hoverBackgroundColor: purple_orange_gradient,\n              hoverBorderWidth: 1,\n              hoverBorderColor: '#000a55'\n          }]\n          };\n        },\n        options: pump_options\n      };\n    \n    }))\n    .catch(error => console.log(error));\n\n  }\n  \n  loadFailedNotifications(){\n    console.log('called')\n    let index = this.state.pageIndex+1;\n    axios.all([\n      instance.get('/failed/notifications/'+index)\n    ])\n    .then(axios.spread((response) => {\n      if(this.state.totalPages > this.state.pageIndex){\n        this.setState({pageIndex:this.state.pageIndex+1})\n      }\n      else{\n        this.setState({lastIndexReached:true})\n      }\n      if(this.state.lastIndexReached === false){\n        this.setState({totalPages:Math.ceil(response.data.count/10)});\n      }\n      \n      this.setState({ failedNotifications:[...this.state.failedNotifications,...response.data.resp],failedNotificationsCount:response.data.count });\n      console.log(this.state.failedNotifications)\n    }))\n    .catch(error => console.log(error));\n  }\n  loadMore() {\n    this.setState((prev) => {\n      return {pageIndex: prev.pageIndex + 1,visible:prev.visible+10};\n    });\n    this.loadFailedNotifications();\n\n  }\n  \n  render() {\n    let waterlabels = this.state.waterGraphlabel;\n    let watersaved = this.state.waterGraphSaved;\n    let waterconsumed = this.state.waterGraphConsumed;\n    // console.log(waterconsumed)\n    let waterGraphDashboard = {\n      data1: canvas => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000,0,500, 0, 100, 0);\n        gradientStroke.addColorStop(0, '#035272');\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(0, 1900,400,1300, 800,1600, 50);\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n    \n        return {\n          labels: waterlabels,\n          datasets: [{\n            label: \"Data\",\n            borderColor: chartColor,\n            pointBorderColor: chartColor,\n            pointBackgroundColor: \"#1e3d60\",\n            pointHoverBackgroundColor: \"#1e3d60\",\n            pointHoverBorderColor: chartColor,\n            pointBorderWidth: 1,\n            pointHoverRadius: 7,\n            pointHoverBorderWidth: 2,\n            pointRadius: 2,\n            fill: false,\n            backgroundColor: gradientFill,\n            borderWidth: 6,\n            data: watersaved\n          }]\n        };\n      },\n      data2: canvas => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000,0,500, 0, 100, 0);\n        gradientStroke.addColorStop(0, '#035272');\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(0, 1900,400,1300, 800,1600, 50);\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n    \n        return {\n          labels: waterlabels,\n          datasets: [{\n            label: \"Data\",\n            borderColor: chartColor,\n            pointBorderColor: chartColor,\n            pointBackgroundColor: \"#1e3d60\",\n            pointHoverBackgroundColor: \"#1e3d60\",\n            pointHoverBorderColor: chartColor,\n            pointBorderWidth: 1,\n            pointHoverRadius: 7,\n            pointHoverBorderWidth: 2,\n            pointRadius: 2,\n            fill: false,\n            backgroundColor: gradientFill,\n            borderWidth: 6,\n            data: waterconsumed\n          }]\n        };\n      },\n      options: chart1_2_options\n    };\n\n    let energylabels = this.state.energyGraphlabel;\n    let energysaved = this.state.energyGraphSaved;\n    let energyconsumed = this.state.energyGraphConsumed;\n\n    let energyGraphDashboard = {\n      data1: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n  \n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: energylabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energysaved\n          }]\n        };\n      },\n      data2: canvas => {\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n    \n        return {\n          labels: energylabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            data: energyconsumed,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55'\n        }]\n            \n        };\n      },\n      options: bar1_2_options\n    };\n\n    let pumplabels = this.state.pumpGraphlabel;\n    let pumpactivity = this.state.pumpActivity;\n    \n    let pumpGraphDashboard = {\n      data1: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n\n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: pumplabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            data: pumpactivity,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55'\n        }]\n        };\n      },\n      options: pump_options\n    };\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr/>\n          <Row className=\"top-cards-inline\">\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalUsers\">{this.state.dashboardStatus.totalUsers}</h4>\n                <p className=\"card-text\">Devices Deployed</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalDevices\">{this.state.dashboardStatus.totalConnected}</h4>\n                <p className=\"card-text\">Online/Connected Devices</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalSensors\">--</h4>\n                <p className=\"card-text\">Online/Connceted Sensors</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"impYield\">--</h4>\n                <p className=\"card-text\">Improvement in Yield</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalAcres\">{this.state.totalAcres}</h4>\n                <p className=\"card-text\">Area covered in acres</p>\n                </CardBody>\n              </Card>\n            </Col>\n            </Row>\n         \n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                  <Row>\n                    <div className=\"tab-frame\">\n                      <input type=\"radio\" defaultChecked name=\"tab\" id=\"tab1\" />\n                      <label htmlFor=\"tab1\" id=\"gdsrdd\">WATER SAVED</label>\n                      <label>|</label>  \n                      <input type=\"radio\" name=\"tab\" id=\"tab2\" />\n                      <label htmlFor=\"tab2\">WATER CONSUMED</label>\n             \n                      <div className=\"tab\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\" style={{height:'500px'}}>\n                            <Line\n                              data={waterGraphDashboard[this.state.bigChartData]}\n                              options={waterGraphDashboard.options}\n                            />\n                            \n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tab\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\" style={{height:'500px'}}>\n                            <Line\n                              data={waterGraphDashboard[this.state.bigChartData1]}\n                              options={waterGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </Row>\n              </Card>\n            </Col>\n          </Row>\n          \n          <Row>\n            <Col lg=\"6\">\n              <div style={{display: 'flex',marginBottom: '5px'}}>\n                <h5 className=\"card-category chart-header\">AVG. PUMP ACTIVITY</h5>\n                <span><img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} /></span>\n                <select id=\"energyselect\" className=\"select_box\" onChange={(event)=>{this.setState({pumpGraph:event.target.value});this.updatePumpGraph(event.target.value)}} value={this.state.pumpGraph}>\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                  <div className=\"chart-area\" style={{marginTop:'60px'}}>\n                    <Bar\n                      data={pumpGraphDashboard[this.state.bigChartData]}\n                      options={pumpGraphDashboard.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\">\n              <div style={{display: 'flex',marginBottom: '5px'}}>\n                <h5 className=\"card-category chart-header\">AVG. ENERGY</h5>\n                <span><img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} /></span>\n                <select id=\"energyselect\" className=\"select_box\" onChange={(event)=>{this.setState({energyGraph:event.target.value});this.updateGraph(event.target.value)}} value={this.state.energyGraph}>\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                <div className=\"tab-frame1\">\n                      <input type=\"radio\" defaultChecked name=\"tab1\" id=\"tab11\" />\n                      <label htmlFor=\"tab11\" id=\"gdsrdd\">SAVED</label>\n                      <label>|</label>  \n                      <input type=\"radio\" name=\"tab1\" id=\"tab22\" />\n                      <label htmlFor=\"tab22\">CONSUMED</label>\n             \n                      <div className=\"tab1\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\">\n                            <Bar\n                              data={energyGraphDashboard[this.state.bigChartData]}\n                              options={energyGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tab1\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\">\n                            <Bar\n                              data={energyGraphDashboard[this.state.bigChartData1]}\n                              options={energyGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n                  \n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          \n          <Row>\n            <Col lg=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Failed Notifications</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" id=\"failednotification\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Reason</th>\n                        <th>Device ID</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* <Rows data={this.state.failedNotifications}/> */}\n                      {this.state.failedNotifications.map((s, i) => {\n                      let createdAt = new Date(s.created_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                      let date = Moment(createdAt).format('YYYY/MM/DD');\n                      let time = Moment(createdAt).format('HH:mm:ss');\n                      \n                      return (\n                        <tr key={i}>\n                          <td><img alt=\"...\" src={s.profile_pic ? s.profile_pic : require('assets/icons/farmer.png')} className=\"mini-profile\" /></td>\n                          <td>{s.name}</td><td>{s.text}</td>\n                          <td>{s.id}</td><td>{date}</td>\n                          <td>{time}</td>\n                        </tr>\n                      );\n                    })}\n                    </tbody>\n                  </Table>\n                  \n                </CardBody>\n                {this.state.visible < this.state.failedNotificationsCount &&\n                    <button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</button>\n                  }\n              </Card>\n            </Col>\n          </Row>\n        \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React,{setState} from \"react\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst SpinnerLoad = () =>(\n  <img src={require(\"assets/icons/pulse-loader.svg\")} className=\"load-more-icon\" />\n)\n\nclass Users extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersArr : [],\n      usersArrCount:0,\n      pageIndex: 0,\n      totalPages:1,\n      visible : 10,\n      isloading:false\n    };\n    this.loadMore = this.loadMore.bind(this);\n  }\n  \n  componentDidMount() {\n    this.loadUsers(this.state.pageIndex);\n  }\n\n  loadUsers(){\n    console.log('called')\n    this.setState({isloading:true});\n    let index = this.state.pageIndex+1;\n    axios.all([\n      instance.get('/users/'+index)\n    ])\n    .then(axios.spread((response) => {\n      this.setState({isloading:false});\n      if(this.state.totalPages > this.state.pageIndex){\n        this.setState({pageIndex:this.state.pageIndex+1})\n      }\n      else{\n        this.setState({lastIndexReached:true})\n      }\n      if(this.state.lastIndexReached == false){\n        this.setState({totalPages:Math.ceil(response.data.count/10)});\n      }\n      \n      this.setState({ usersArr:[...this.state.usersArr,...response.data.output],usersArrCount:response.data.count });\n      console.log(this.state.usersArr)\n    }))\n    .catch(error => console.log(error));\n  }\n\n  loadMore() {\n    this.setState((prev) => {\n      return {pageIndex: prev.pageIndex + 1,visible:prev.visible+10};\n    });\n    this.loadUsers();\n  }\n\n  \n  render() {\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr/>\n          \n          <Row>\n            <Col lg=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">SICCA Device Users</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"device_user\" id=\"users\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Device Id</th>\n                        <th>Nodes</th>\n                        <th>Node Created At</th>\n                        <th>Land Size</th>\n                        <th>User Created At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.usersArr.map((s, i) => {\n                       \n                        let updated_at = new Date(s.user.updated_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                        let date = Moment(updated_at).format('L HH:mm:ss');\n                        let total_land_size = s.user.total_land_size==null?'-':s.user.total_land_size+' Acres'\n                        \n                        \n                        let nodelist = s.nodes.map((n,j) => {  \n                          let nodeInfo = n.node_id+' : '+n.crop_name;\n                          return(<a key={j} href={\"/sicca-admin/individual/\"+n.node_id}>{nodeInfo}</a>);\n                        });\n                        let nodeCreatedAt = s.nodes.map((n,j) => {\n                          let created_at = new Date(n.created_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                          let nodeDate = Moment(created_at).format('L HH:mm:ss');\n                          return(<p className=\"nodeCreatedDate\">{nodeDate}</p>);\n                        });\n                        \n                        return (<tr key={i}>\n                                <td><img src={s.profile_pic ? s.profile_pic : require('assets/icons/farmer.png')} className=\"mini-profile\" /></td>\n                                <td><p>{s.user.name}</p></td>\n                                <td><p>{s.user.id}</p></td>\n                                <td>{nodelist}</td>\n                                <td>{nodeCreatedAt}</td>\n                                <td><p>{total_land_size}</p></td>\n                                <td><p>{date}</p></td>\n                              </tr>);\n                            })}\n                    </tbody>\n                  </Table>\n                  \n                </CardBody>\n                <div style={{position:'relative'}}>\n                  {this.state.visible < this.state.usersArrCount &&\n                    <Button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</Button>\n                  }\n                  {this.state.isloading && this.state.visible < this.state.usersArrCount?<SpinnerLoad/>:''}\n                </div>\n                <h5>{this.state.isloading}</h5>\n              </Card>\n            </Col>\n          </Row>\n        \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import React,{setState} from \"react\";\n\nclass Alerts extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isloading:false\n    };\n  }\n  \n  render() {\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr/>\n          \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Alerts;\n","import Dashboard from \"views/Dashboard.js\";\nimport Users from \"views/Users.js\";\nimport Alerts from \"views/Alerts.js\";\nimport DeviceManagement from \"views/DeviceManagement.js\";\nimport Support from \"views/Support.js\";\nimport AccessControl from \"views/AccessControl.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    iconClass: \"left-menu-icon\",\n    icon: require(\"assets/icons/Dashboard.svg\"),\n    component: Dashboard,\n    layout: \"/sicca-admin\"\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    iconClass: \"left-menu-icon\",\n    icon: require(\"assets/icons/Users icon.svg\"),\n    component: Users,\n    layout: \"/sicca-admin\"\n  },\n  {\n    path:\"/alerts\",\n    name:\"Alerts\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Alerts icon.svg\"),\n    component: Alerts,\n    layout:\"/sicca-admin\"\n  },\n  {\n    path:\"/devicemanagement\",\n    name:\"Device Management\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Device Management.svg\"),\n    component: DeviceManagement,\n    layout:\"/sicca-admin\"\n  },\n  {\n    path:\"/support\",\n    name:\"Support\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Support.svg\"),\n    component: Support,\n    layout:\"/sicca-admin\"\n  },\n  {\n    path:\"/accesscontrol\",\n    name:\"Access Control\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Access Icon.svg\"),\n    component: AccessControl,\n    layout:\"/sicca-admin\"\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   iconClass: \"left-menu-icon\",\n  //   icon: require(\"assets/icons/Dashboard.svg\"),\n  //   component: Icons,\n  //   layout: \"/sicca-admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Table List\",\n  //   rtlName: \"قائمة الجدول\",\n  //   iconClass: \"left-menu-icon\",\n  //   icon: require(\"assets/icons/Dashboard.svg\"),\n  //   component: TableList,\n  //   layout: \"/sicca-admin\"\n  // }\n];\nexport default routes;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common';\n\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n  console.log(getToken());\n  return (\n    <Route\n      {...rest}\n      render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n \nexport default PrivateRoute;","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/sicca-adminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport Individual from \"views/Individual.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nimport PrivateRoute from 'Utils/PrivateRoute';\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/sicca-admin\") {\n        return (\n          <PrivateRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"#\",\n              text: \"Gramin Admin\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              {/* <Redirect from=\"*\" to=\"/sicca-admin/dashboard\"/> */}\n              {<Route exact component={Individual} path=\"/sicca-admin/individual/:nodeId\" />}\n            </Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        \n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { useState } from 'react';\nimport axios from \"axios\";\nimport BASE_URL from 'requests.js';\nimport { setUserSession } from 'Utils/Common';\n\nfunction Login(props) {\n  const email = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  \n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios.post(BASE_URL+'/login', { email: email.value, password: password.value }).then(response => {\n      setLoading(false);\n      console.log(response)\n      if(response.data.error){\n        setError(response.data.error);\n      }\n      else{\n        localStorage.setItem('token',response.data.token);\n        setUserSession(response.data.token);\n        setTimeout(function() {\n          props.history.push('/sicca-admin/dashboard');\n        }, 5000);\n        \n        \n      }\n      \n    }).catch(error => {\n      setLoading(false);\n      if (error.response.status === 401) setError(error.response.data.message);\n      else setError(\"Something went wrong. Please try again later.\");\n    });\n  }\n\n  return (\n    <div className=\"box\">\n        <div className=\"login-form\">\n            <h1>Login</h1><br/>\n                <div>\n                Email<br />\n                <input type=\"text\" {...email}  />\n                </div>\n      <div style={{ marginTop: 10 }}>\n        Password<br />\n        <input type=\"password\" {...password} autoComplete=\"new-password\" />\n      </div>\n      {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n      <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\n    </div>\n    </div>\n  );\n}\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nexport default Login;","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/sicca-admin/sicca-admin.js\";\nimport Login from \"components/Login/Login.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/sicca-admin\" render={props => <AdminLayout {...props} />} />\n      <Route exact path=\"/login\" component={Login} render={props =>null} />\n      {/* <Redirect from=\"/\" to=\"/sicca-admin/dashboard\" /> */}\n    </Switch>\n  </Router>,\n  \n  document.getElementById(\"root\")\n  // ReactDOM.render(<App />, document.getElementById('root'));\n);\n","module.exports = __webpack_public_path__ + \"static/media/calendar.9f1f118b.svg\";","module.exports = __webpack_public_path__ + \"static/media/farmer.d8a57b3b.png\";"],"sourceRoot":""}