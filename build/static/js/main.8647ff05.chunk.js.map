{"version":3,"sources":["assets/img/react-logo.png","assets/img/anime3.png","variables/charts.js","assets/img/farmer.jpeg","assets/icons/edit.svg","assets/icons/Dashboard.svg","assets/icons/Users icon.svg","assets/icons/Alerts icon.svg","assets/icons/Device Management.svg","assets/icons/Support.svg","assets/icons/Access Icon.svg","components/Sidebar/Sidebar.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","Utils/Common.js","config.js","views/Individual.js","views/SoilMoisture.js","views/Dashboard.js","views/Users.js","views/Alerts.js","views/DeviceManagement.js","views/Support.js","views/AccessControl.js","routes.js","Utils/PrivateRoute.js","layouts/Admin/Admin.js","components/Login/Login.js","index.js","assets/icons/calendar.svg","assets/icons/pulse-loader.svg","assets/icons/farmer.png"],"names":["module","exports","chart1_2_options","layout","padding","left","right","top","bottom","maintainAspectRatio","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","legend","fillStyle","display","scales","yAxes","ticks","fontColor","fontSize","beginAtZero","callback","value","index","values","maxTicksLimit","xAxes","gridLines","drawTicks","drawBorder","color","zeroLineColor","zeroLineWidth","chartExample2","data","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","options","bar1_2_options","barThickness","pump_options","min","stepSize","chartExample3","hoverBackgroundColor","responsive","suggestedMin","suggestedMax","chartExample4","barPercentage","ps","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","this","removeEventListener","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","placeholder","UncontrolledDropdown","nav","DropdownToggle","href","alt","src","require","React","Component","Footer","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","ref","map","prop","key","redirect","path","pro","to","activeClassName","rtlName","name","icon","iconClass","defaultProps","getToken","sessionStorage","getItem","token","localStorage","console","log","instance","axios","create","baseURL","headers","AlertHistory","Card","CardHeader","CardTitle","tag","CardBody","Table","s","i","createdAt","Date","created_at","toISOString","replace","date","Moment","format","time","text","Individual","setBgChartData","bigChartData","statusUser","statusSicca","statusNode","wp","fc","waterGraphlabel","waterGraphConsumed","waterGraphSaved","energyGraphlabel","energyGraphConsumed","energyGraphSaved","pumpGraphlabel","pumpActivity","totalAcres","bigChartData1","energyGraph","pumpGraph","allNotifications","notificationsCount","pageIndex","totalPages","visible","nodeId","showAlertHistoryFlag","loadMore","interceptors","request","use","req","Authorization","loadIndData","tho","setInterval","match","params","all","get","then","spread","response","user","sicca","length","node","pumpGraphlabels","pumpGraphh","activity","push","totalHours","catch","error","selectval","energyGraphlabels","energyGraphc","energyGraphs","totalConsumed","totalSaved","bar2_2_options","lastIndexReached","Math","ceil","count","resp","prev","loadNotifications","sm","sm_status","waterlabels","watersaved","waterconsumed","waterGraphDashboard","data1","ctx","gradientFill","pointHoverBorderColor","data2","energylabels","energysaved","energyconsumed","energyGraphDashboard","purple_orange_gradient","dataPointWidth","hoverBorderWidth","hoverBorderColor","pumplabels","pumpactivity","pumpGraphDashboard","irigationOption","charAt","sm1","sm2","sm3","pumpStatus","lastUpdatedAt","soil_moist_remark","atm_temp_remark","soil_temp_remark","hum_remark","light_remark","soil_temp","atm_temp","humid","sunlight","temp","hum","light","updatedAt","tm","toLocaleString","d","nn","toUTCString","utcDate","istDate","tz","Row","Col","lg","md","ms","cropName","style","opacity","valveStatus","areaSize","xs","defaultChecked","htmlFor","height","marginBottom","onChange","event","target","updatePumpGraph","marginTop","updateGraph","Button","SpinnerLoad","SoilMoisture","SMdata","sm4","humidity","soilTemp","plotData","loadGraph","useResizeHandler","width","Dashboard","dashboardStatus","failedNotifications","failedNotificationsCount","refsh","status","loadFailedNotifications","avg_consumed","avg_saved","totalUsers","totalConnected","profile_pic","Users","usersArr","usersArrCount","isloading","loadUsers","loadSingleUser","output","updated_at","total_land_size","nodelist","nodes","n","j","nodeInfo","node_id","crop_name","textDecoration","nodeCreatedAt","nodeDate","village","Alerts","DeviceManagement","Support","AccessControl","component","PrivateRoute","rest","render","from","Admin","toggle","getRoutes","handleBgClick","getBrandText","mainPanel","tables","querySelectorAll","e","history","action","scrollTop","scrollingElement","outterLink","imgSrc","brandText","exact","useFormInput","initialValue","useState","setValue","Login","email","password","setError","loading","setLoading","autoComplete","post","BASE_URL","setItem","setUserSession","jwt","sub","setTimeout","message","disabled","hist","createBrowserHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8647ff05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","// import { instance} from \"react-chartjs-2\";\n\n// ##############################\n// // // Chart variables\n// #############################\n\nlet chart1_2_options = {\n  layout: {\n    padding: {\n      left: 20,\n      right: 20,\n      top: 0,\n      bottom: 0\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: '#fff',\n    titleFontColor: '#333',\n    bodyFontColor: '#666',\n    bodySpacing: 8,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  legend: {\n    position: \"bottom\",\n    fillStyle: \"#fff\",\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        fontColor: \"rgba(255,255,255,0.8)\",\n        fontSize: 14,\n        beginAtZero:true,\n          callback: function(value, index, values) {\n            if(value === 0){\n              return 'Litres';\n            }\n            else{\n              return value;\n            }\n          },\n        maxTicksLimit: 10,\n        padding: 5,\n        \n        // min:0,\n        // stepSize: 1000\n      },\n      \n\n    }],\n    xAxes: [{\n      // gridLines: {\n      //   zeroLineColor: \"transparent\",\n      //   display: false,\n\n      // },\n      gridLines: {\n        drawTicks: true,\n        drawBorder: false,\n        display: true,\n        color: \"rgba(255,255,255,0.1)\",\n        zeroLineColor: \"rgba(255,255,255,0.1)\",\n        zeroLineWidth:1\n      },\n      ticks: {\n        padding: 10,\n        fontColor: \"rgba(255,255,255,0.8)\",\n        fontSize: 16,\n      }\n    }]\n  }\n};\nlet bar1_2_options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor:\"#bbb\",\n          beginAtZero:false,\n          callback: function(value, index, values) {\n            if(value === 0){\n              return 'Kwh';\n            }\n            else{\n              return value;\n            }\n          },\n          maxTicksLimit: 5,\n              \n        }\n      }],\n      xAxes: [{\n        ticks: {\n          fontColor:\"#bbb\"\n        },\n        barThickness: 20\n      }]\n    },\n    legend: {\n      display: false\n    },\n  \n};\n\nlet pump_options = {\n  scales: {\n    yAxes: [{\n      ticks: {\n        fontColor:\"#bbb\",\n        beginAtZero:true,\n        maxTicksLimit: 5,\n        padding: 10,\n        min:0,\n        stepSize: 5\n      },\n\n    }],\n    xAxes: [{\n        ticks: {\n          fontColor:\"#bbb\"\n        },\n        barThickness: 20\n      }]\n    },\n    legend: {\n      labels: {\n            fontColor: \"#fff\"\n        },\n      display: false\n  },\n}\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nmodule.exports = {\n  chart1_2_options,\n  bar1_2_options,\n  pump_options,\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4 // in src/views/Dashboard.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/farmer.2b0af8e3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/edit.f6ecbfdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dashboard.9f4a9bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Users icon.ee03d0ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/Alerts icon.50c35db6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Device Management.3c72d947.svg\";","module.exports = __webpack_public_path__ + \"static/media/Support.7eb07b6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Access Icon.1be125c1.svg\";","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    // let logoImg = null;\n    // let logoText = null;\n    // if (logo !== undefined) {\n    //   if (logo.outterLink !== undefined) {\n    //     logoImg = (\n    //       <a\n    //         href={logo.outterLink}\n    //         className=\"simple-text logo-mini\"\n    //         target=\"_blank\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         <div className=\"logo-img\">\n    //           <img src={logo.imgSrc} alt=\"react-logo\" />\n    //         </div>\n    //       </a>\n    //     );\n    //     logoText = (\n    //       <a\n    //         href={logo.outterLink}\n    //         className=\"simple-text logo-normal\"\n    //         target=\"_blank\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         {logo.text}\n    //       </a>\n    //     );\n    //   } else {\n    //     logoImg = (\n    //       <Link\n    //         to={logo.innerLink}\n    //         className=\"simple-text logo-mini\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         <div className=\"logo-img\">\n    //           <img src={logo.imgSrc} alt=\"react-logo\" />\n    //         </div>\n    //       </Link>\n    //     );\n    //     logoText = (\n    //       <Link\n    //         to={logo.innerLink}\n    //         className=\"simple-text logo-normal\"\n    //         onClick={this.props.toggleSidebar}\n    //       >\n    //         {logo.text}\n    //       </Link>\n    //     );\n    //   }\n    // }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {/* {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null} */}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    <img src={prop.icon} className={prop.iconClass} />\n                    \n                  </NavLink>\n                </li>\n              );\n            })}\n            \n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Navbar,\n  NavLink,\n  Nav,\n  Container\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              \n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav navbar>\n              <form>\n                <div className=\"input-group no-border\">\n                  <input type=\"text\" className=\"search-bar\" placeholder=\"Search Farmer/SICCA device\" />\n                  <div className=\"input-group-append\">\n                    <div className=\"input-group-text\">\n                      <i className=\"tim-icons icon-zoom-split\"></i>\n                    </div>\n                  </div>\n                </div>\n              </form>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    {/* <div className=\"notification d-none d-lg-block d-xl-block\" /> */}\n                    <i className=\"tim-icons icon-bell-55\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  {/* <DropdownMenu className=\"dropdown-navbar notifications\" right tag=\"ul\">\n                  </DropdownMenu> */}\n                </UncontrolledDropdown>\n                <li><a className=\"nav-link\" href=\"#\">\n                  <i className=\"tim-icons icon-settings-gear-63\"></i>\n                </a></li>  \n                <li className=\"separator d-lg-none\" />\n              </Nav>\n              <p className=\"adminName\">Hi, Admin</p>\n              <div className=\"photo\">\n                <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n              </div>\n            </Collapse>\n            \n          </Container>\n        </Navbar>\n      \n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            {/* <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\">Creative Tim</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/presentation?ref=bdr-user-archive-footer\">About Us</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.creative-tim.com/blog?ref=bdr-user-archive-footer\">Blog</NavLink>\n            </NavItem> */}\n          </Nav>\n          \n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","// return the user data from the session storage\nexport const getUser = () => {\n    const userStr = sessionStorage.getItem('user');\n    if (userStr) return JSON.parse(userStr);\n    else return null;\n  }\n  \n  // return the token from the session storage\n  export const getToken = () => {\n    return sessionStorage.getItem('token') || null;\n  }\n  \n  // remove the token and user from the session storage\n  export const removeUserSession = () => {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n  }\n  \n  // set the token and user from the session storage\n  export const setUserSession = (token) => {\n    sessionStorage.setItem('token', token);\n    // sessionStorage.setItem('user', JSON.stringify(user));\n  }","import axios from \"axios\";\nimport { getToken } from \"Utils/Common\";\n\nlet token = getToken();\nif(token == null){\n  token = localStorage.getItem('token');\n}\n  console.log(\"token:\",token)\n  const instance = axios.create({\n    baseURL: 'http://35.202.59.196/api/admin',\n    // baseURL:'http://localhost:4400/api/admin',\n    // timeout: 10000,\n    headers: {'Authorization': token}\n  });\n\n  export default instance;\n","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from \"config.js\";\nimport Moment from \"moment\";\nimport \"moment-timezone\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n// import { node } from \"prop-types\";\n\nconst AlertHistory = ({ data }) => (\n  <Card>\n    <CardHeader>\n      <CardTitle tag=\"h4\">Notifications</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Table className=\"tablesorter\" id=\"failednotification\">\n        <thead className=\"text-primary\">\n          <tr>\n            <th>Reason</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((s, i) => {\n            let createdAt = new Date(s.created_at)\n              .toISOString()\n              .replace(/T/, \" \")\n              .replace(/\\..+/, \"\");\n            let date = Moment(createdAt).format(\"L\");\n            let time = Moment(createdAt).format(\"HH:mm:ss\");\n            return (\n              <tr key={i}>\n                <td>{s.text}</td>\n                <td>{date}</td>\n                <td>{time}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </CardBody>\n  </Card>\n);\n\nclass Individual extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statusUser: [],\n      statusSicca: [],\n      statusNode: [],\n      wp: 720,\n      fc: 440,\n      waterGraphlabel: [],\n      waterGraphConsumed: [],\n      waterGraphSaved: [],\n      energyGraphlabel: [],\n      energyGraphConsumed: [],\n      energyGraphSaved: [],\n      pumpGraphlabel: [],\n      pumpActivity: [],\n      totalAcres: \"--\",\n      bigChartData: \"data1\",\n      bigChartData1: \"data2\",\n      energyGraph: 1,\n      pumpGraph: 1,\n      allNotifications: [],\n      notificationsCount: 1,\n      pageIndex: 0,\n      totalPages: 1,\n      visible: 10,\n      nodeId: 0,\n      showAlertHistoryFlag: false,\n    };\n    this.loadMore = this.loadMore.bind(this);\n  }\n\n  componentDidMount() {\n    instance.interceptors.request.use((req) => {\n      req.headers.Authorization = localStorage.getItem(\"token\");\n      return req;\n    });\n\n    this.loadIndData();\n    let tho = this;\n    setInterval(function () {\n      tho.loadIndData();\n    }, 900000);\n  }\n\n  setBgChartData = (name) => {\n    this.setState({\n      bigChartData: name,\n    });\n  };\n\n  loadIndData() {\n    if (this.props.match.params) {\n      this.setState({ nodeId: this.props.match.params.nodeId });\n      axios\n        .all([\n          instance.get(\"node/details/\" + this.props.match.params.nodeId),\n          // instance.get(\"node/water/graph/\" + this.props.match.params.nodeId),\n          // instance.get(\n          //   \"node/energy/graph/\" + this.props.match.params.nodeId + \"/1\"\n          // ),\n          instance.get(\n            \"node/pump/activity/graph/\" + this.props.match.params.nodeId + \"/1\"\n          ),\n        ])\n        .then(\n          axios.spread((...response) => {\n            console.log(response)\n            let statusUser = response[0].data.user[0];\n            let statusSicca;\n            if (response[0].data.sicca.length !== 0) {\n              statusSicca = response[0].data.sicca[0];\n            } else {\n              statusSicca = null;\n            }\n\n            let statusNode = response[0].data.node;\n            // let waterGraphlabels = [];\n            // let waterGraphc = [];\n            // let waterGraphs = [];\n            // if (response[1].data.activity.length !== 0) {\n            //   for (var i = 0; i < response[1].data.activity.length; i++) {\n            //     waterGraphlabels.push(response[1].data.activity[i].created_at);\n            //     waterGraphc.push(response[1].data.activity[i].avg_consumed);\n            //     waterGraphs.push(response[1].data.activity[i].avg_saved);\n            //   }\n            // }\n            // let energyGraphlabels = [];\n            // let energyGraphc = [];\n            // let energyGraphs = [];\n            // if (response[2].data.activity.length !== 0) {\n            //   for (i = 0; i < response[2].data.activity.length; i++) {\n            //     energyGraphlabels.push(response[2].data.activity[i].created_at);\n            //     energyGraphc.push(response[2].data.activity[i].totalConsumed);\n            //     energyGraphs.push(response[2].data.activity[i].totalSaved);\n            //   }\n            // }\n            let pumpGraphlabels = [];\n            let pumpGraphh = [];\n            if (response[1].data.activity.length !== 0) {\n              for (var i = 0; i < response[1].data.activity.length; i++) {\n                pumpGraphlabels.push(response[1].data.activity[i].created_at);\n                pumpGraphh.push(response[1].data.activity[i].totalHours);\n              }\n            }\n            this.setState({\n              statusUser: statusUser,\n              statusSicca: statusSicca,\n              statusNode: statusNode,\n              // waterGraphlabel: waterGraphlabels,\n              // waterGraphConsumed: waterGraphc,\n              // waterGraphSaved: waterGraphs,\n              // energyGraphlabel: energyGraphlabels,\n              // energyGraphConsumed: energyGraphc,\n              // energyGraphSaved: energyGraphs,\n              pumpGraphlabel: pumpGraphlabels,\n              pumpActivity: pumpGraphh,\n            });\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n\n  updateGraph(selectval) {\n    axios\n      .all([\n        instance.get(\n          \"node/energy/graph/\" +\n            this.props.match.params.nodeId +\n            \"/\" +\n            selectval\n        ),\n      ])\n      .then(\n        axios.spread((response) => {\n          let energyGraphlabels = [];\n          let energyGraphc = [];\n          let energyGraphs = [];\n          for (var i = 0; i < response.data.activity.length; i++) {\n            energyGraphlabels.push(response.data.activity[i].created_at);\n            energyGraphc.push(response.data.activity[i].totalConsumed);\n            energyGraphs.push(response.data.activity[i].totalSaved);\n          }\n          this.setState({\n            energyGraphlabel: energyGraphlabels,\n            energyGraphConsumed: energyGraphc,\n            energyGraphSaved: energyGraphs,\n          });\n          let energylabels = this.state.energyGraphlabel;\n          let energysaved = this.state.energyGraphSaved;\n          let energyconsumed = this.state.energyGraphConsumed;\n          //console.log(energylabels)\n          let energyGraphDashboard = {\n            data1: (canvas) => {\n              // let chartColor = \"#035272\";\n              // var yLabels = {0 : 'newb'}\n              let bar_ctx = canvas.getContext(\"2d\");\n\n              var purple_orange_gradient = bar_ctx.createLinearGradient(\n                0,\n                0,\n                0,\n                300\n              );\n              purple_orange_gradient.addColorStop(0, \"#00727b\");\n              purple_orange_gradient.addColorStop(1, \"#000a55\");\n\n              return {\n                type: \"bar\",\n                dataPointWidth: 20,\n                labels: energyGraphlabels,\n                datasets: [\n                  {\n                    label: \"\",\n                    fill: true,\n                    borderWidth: 0.5,\n                    backgroundColor: purple_orange_gradient,\n                    hoverBackgroundColor: purple_orange_gradient,\n                    hoverBorderWidth: 1,\n                    hoverBorderColor: \"#000a55\",\n                    data: energyGraphs,\n                  },\n                ],\n              };\n            },\n            data2: (canvas) => {\n              // let chartColor = \"#035272\";\n              // var yLabels = {0 : 'newb'}\n              let bar_ctx = canvas.getContext(\"2d\");\n\n              var purple_orange_gradient = bar_ctx.createLinearGradient(\n                0,\n                0,\n                0,\n                300\n              );\n              purple_orange_gradient.addColorStop(0, \"#00727b\");\n              purple_orange_gradient.addColorStop(1, \"#000a55\");\n\n              return {\n                labels: energyGraphlabels,\n                datasets: [\n                  {\n                    label: \"\",\n                    fill: true,\n                    borderWidth: 0.5,\n                    backgroundColor: purple_orange_gradient,\n                    hoverBackgroundColor: purple_orange_gradient,\n                    hoverBorderWidth: 1,\n                    hoverBorderColor: \"#000a55\",\n                    data: energyGraphc,\n                  },\n                ],\n              };\n            },\n            options: bar2_2_options,\n          };\n        })\n      )\n      .catch((error) => console.log(error));\n  }\n\n  updatePumpGraph(selectval) {\n    axios\n      .all([\n        instance.get(\n          \"/node/pump/activity/graph/\" +\n          this.props.match.params.nodeId +\n            \"/\" +\n            selectval\n        ),\n      ])\n      .then(\n        axios.spread((response) => {\n          let pumpGraphlabels = [];\n          let pumpGraphh = [];\n          for (var i = 0; i < response.data.activity.length; i++) {\n            pumpGraphlabels.push(response.data.activity[i].created_at);\n            pumpGraphh.push(response.data.activity[i].totalHours);\n          }\n          this.setState({\n            pumpGraphlabel: pumpGraphlabels,\n            pumpActivity: pumpGraphh,\n          });\n          let pumpGraphDashboard = {\n            data1: (canvas) => {\n              // let chartColor = \"#035272\";\n              // var yLabels = {0 : 'newb'}\n              let bar_ctx = canvas.getContext(\"2d\");\n\n              var purple_orange_gradient = bar_ctx.createLinearGradient(\n                0,\n                0,\n                0,\n                300\n              );\n              purple_orange_gradient.addColorStop(0, \"#00727b\");\n              purple_orange_gradient.addColorStop(1, \"#000a55\");\n\n              return {\n                type: \"bar\",\n                dataPointWidth: 20,\n                labels: pumpGraphlabels,\n                datasets: [\n                  {\n                    label: \"\",\n                    fill: true,\n                    borderWidth: 0.5,\n                    data: pumpGraphh,\n                    backgroundColor: purple_orange_gradient,\n                    hoverBackgroundColor: purple_orange_gradient,\n                    hoverBorderWidth: 1,\n                    hoverBorderColor: \"#000a55\",\n                  },\n                ],\n              };\n            },\n            options: pump_options,\n          };\n        })\n      )\n      .catch((error) => console.log(error));\n  }\n\n  loadNotifications() {\n    let index = this.state.pageIndex + 1;\n    axios\n      .all([\n        instance.get(\n          \"/user/notifications/each/\" +\n            this.props.match.params.nodeId +\n            \"/\" +\n            index\n        ),\n      ])\n      .then(\n        axios.spread((response) => {\n          this.setState({ showAlertHistoryFlag: true });\n\n          if (this.state.totalPages > this.state.pageIndex) {\n            this.setState({ pageIndex: this.state.pageIndex + 1 });\n          } else {\n            this.setState({ lastIndexReached: true });\n          }\n          if (this.state.lastIndexReached === false) {\n            this.setState({ totalPages: Math.ceil(response.data.count / 10) });\n          }\n\n          this.setState({\n            allNotifications: [\n              ...this.state.allNotifications,\n              ...response.data.resp,\n            ],\n            notificationsCount: response.data.count,\n          });\n        })\n      )\n      .catch((error) => console.log(error));\n  }\n\n  loadMore() {\n    this.setState((prev) => {\n      return { pageIndex: prev.pageIndex + 1, visible: prev.visible + 10 };\n    });\n    this.loadNotifications();\n  }\n\n  render() {\n    let waterlabels = this.state.waterGraphlabel;\n    let watersaved = this.state.waterGraphSaved;\n    let waterconsumed = this.state.waterGraphConsumed;\n    // console.log(waterconsumed)\n    let waterGraphDashboard = {\n      data1: (canvas) => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000, 0, 500, 0, 100, 0);\n        gradientStroke.addColorStop(0, \"#035272\");\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(\n          0,\n          1900,\n          400,\n          1300,\n          800,\n          1600,\n          50\n        );\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n\n        return {\n          labels: waterlabels,\n          datasets: [\n            {\n              label: \"Data\",\n              borderColor: chartColor,\n              pointBorderColor: chartColor,\n              pointBackgroundColor: \"#1e3d60\",\n              pointHoverBackgroundColor: \"#1e3d60\",\n              pointHoverBorderColor: chartColor,\n              pointBorderWidth: 1,\n              pointHoverRadius: 7,\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              fill: false,\n              backgroundColor: gradientFill,\n              borderWidth: 6,\n              data: watersaved,\n            },\n          ],\n        };\n      },\n      data2: (canvas) => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000, 0, 500, 0, 100, 0);\n        gradientStroke.addColorStop(0, \"#035272\");\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(\n          0,\n          1900,\n          400,\n          1300,\n          800,\n          1600,\n          50\n        );\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n\n        return {\n          labels: waterlabels,\n          datasets: [\n            {\n              label: \"Data\",\n              borderColor: chartColor,\n              pointBorderColor: chartColor,\n              pointBackgroundColor: \"#1e3d60\",\n              pointHoverBackgroundColor: \"#1e3d60\",\n              pointHoverBorderColor: chartColor,\n              pointBorderWidth: 1,\n              pointHoverRadius: 7,\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              fill: false,\n              backgroundColor: gradientFill,\n              borderWidth: 6,\n              data: waterconsumed,\n            },\n          ],\n        };\n      },\n      options: chart1_2_options,\n    };\n\n    let energylabels = this.state.energyGraphlabel;\n    let energysaved = this.state.energyGraphSaved;\n    let energyconsumed = this.state.energyGraphConsumed;\n\n    let energyGraphDashboard = {\n      data1: (canvas) => {\n        let chartColor = \"#035272\";\n        var yLabels = { 0: \"newb\" };\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0, 0, 0, 300);\n        purple_orange_gradient.addColorStop(0, \"#00727b\");\n        purple_orange_gradient.addColorStop(1, \"#000a55\");\n\n        return {\n          type: \"bar\",\n          dataPointWidth: 20,\n          labels: energylabels,\n          datasets: [\n            {\n              label: \"\",\n              fill: true,\n              borderWidth: 0.5,\n              backgroundColor: purple_orange_gradient,\n              hoverBackgroundColor: purple_orange_gradient,\n              hoverBorderWidth: 1,\n              hoverBorderColor: \"#000a55\",\n              data: energysaved,\n            },\n          ],\n        };\n      },\n      data2: (canvas) => {\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0, 0, 0, 300);\n        purple_orange_gradient.addColorStop(0, \"#00727b\");\n        purple_orange_gradient.addColorStop(1, \"#000a55\");\n\n        return {\n          labels: energylabels,\n          datasets: [\n            {\n              label: \"\",\n              fill: true,\n              borderWidth: 0.5,\n              data: energyconsumed,\n              backgroundColor: purple_orange_gradient,\n              hoverBackgroundColor: purple_orange_gradient,\n              hoverBorderWidth: 1,\n              hoverBorderColor: \"#000a55\",\n            },\n          ],\n        };\n      },\n      options: bar1_2_options,\n    };\n\n    let pumplabels = this.state.pumpGraphlabel;\n    let pumpactivity = this.state.pumpActivity;\n\n    let pumpGraphDashboard = {\n      data1: (canvas) => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0, 0, 0, 300);\n        purple_orange_gradient.addColorStop(0, \"#00727b\");\n        purple_orange_gradient.addColorStop(1, \"#000a55\");\n\n        return {\n          type: \"bar\",\n          dataPointWidth: 20,\n          labels: pumplabels,\n          datasets: [\n            {\n              label: \"\",\n              fill: true,\n              borderWidth: 0.5,\n              data: pumpactivity,\n              backgroundColor: purple_orange_gradient,\n              hoverBackgroundColor: purple_orange_gradient,\n              hoverBorderWidth: 1,\n              hoverBorderColor: \"#000a55\",\n            },\n          ],\n        };\n      },\n      options: pump_options,\n    };\n    const fc = this.state.fc;\n    const wp = this.state.wp;\n    let sm;\n\n    if (this.state.statusNode.irigationOption) {\n      if (this.state.statusNode.irigationOption.charAt(0) === \"1\") {\n        sm = this.state.statusSicca.sm1;\n      } else if (this.state.statusNode.irigationOption.charAt(0) === \"4\") {\n        sm = this.state.statusSicca.sm2;\n      } else if (this.state.statusNode.irigationOption.charAt(0) === \"8\") {\n        sm = this.state.statusSicca.sm3;\n      }\n    }\n    sm = this.state.statusSicca.sm1;\n    let sm_status;\n    if (this.state.statusNode.pumpStatus === \"1\") {\n      if ((sm) => fc) {\n        sm_status = \"DRY\";\n      } else if (sm < fc) {\n        sm_status = \"WET\";\n      }\n    } else {\n      if (fc > sm) {\n        sm_status = \"WET\";\n      } else if ((sm) => fc && sm < wp) {\n        sm_status = \"WET\";\n      } else if (sm > wp) {\n        sm_status = \"DRY\";\n      }\n    }\n\n    let soil_moist_remark = \"bg-blue\";\n    let atm_temp_remark = \"bg-blue\";\n    let soil_temp_remark = \"bg-blue\";\n    let hum_remark = \"bg-blue\";\n    let light_remark = \"bg-blue\";\n    let soil_temp = \"--\";\n    let atm_temp = \"--\";\n    let humid = \"--\";\n    let sunlight = \"--\";\n\n    if (this.state.statusSicca != null) {\n      sm >= 100 || sm <= 1000\n        ? (soil_moist_remark = \"bg-blue\")\n        : (soil_moist_remark = \"bg-red\");\n\n      if (this.state.statusSicca.temp) {\n        atm_temp = this.state.statusSicca.temp + \"°C\";\n        this.state.statusSicca.temp >= 0 || this.state.statusSicca.temp <= 100\n          ? (atm_temp_remark = \"bg-blue\")\n          : (atm_temp_remark = \"bg-red\");\n      }\n\n      if (this.state.statusSicca.soil_temp) {\n        soil_temp = this.state.statusSicca.soil_temp + \"°C\";\n        this.state.statusSicca.soil_temp >= 0 ||\n        this.state.statusSicca.soil_temp <= 100\n          ? (soil_temp_remark = \"bg-blue\")\n          : (soil_temp_remark = \"bg-red\");\n      }\n\n      if (this.state.statusSicca.hum) {\n        humid = this.state.statusSicca.hum + \"%\";\n        this.state.statusSicca.hum >= 0 || this.state.statusSicca.hum <= 100\n          ? (hum_remark = \"bg-blue\")\n          : (hum_remark = \"bg-red\");\n      }\n\n      if (this.state.statusSicca.light) {\n        sunlight = this.state.statusSicca.light;\n        this.state.statusSicca.light >= 0 &&\n        this.state.statusSicca.light <= 65000\n          ? (light_remark = \"bg-blue\")\n          : (light_remark = \"bg-red\");\n      }\n    }\n\n    let lastUpdatedAt;\n    if (this.state.statusNode.updatedAt) {\n      console.log(\"old:\", this.state.statusNode.updatedAt);\n\n      let tm = new Date(this.state.statusNode.updatedAt)\n        .toISOString()\n        .replace(/T/, \" \")\n        .replace(/\\..+/, \"\");\n\n      lastUpdatedAt = Moment(tm).format(\"YYYY-MM-DD HH:mm:ss\").toLocaleString();\n      console.log(\"new:\", lastUpdatedAt);\n\n      var d = new Date();\n      console.log(\"current time: \", d);\n      // var n = d.getTimezoneOffset();\n      // console.log(\"new Date:\",n);\n\n      var nn = d.toUTCString();\n      console.log(nn);\n\n      console.log(d.toLocaleString());\n\n      let utcDate = Moment(tm);\n      let istDate = Moment(utcDate).tz(\"Asia/Kolkata\");\n\n      console.log(istDate.format(\"YYYY-MM-DD HH:mm:ss\"));\n    }\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr />\n\n          <div className=\"ind-card\">\n            <Row className=\"top-cards-inline\">\n              <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk\">\n                <img\n                  alt=\"...\"\n                  src={require(\"assets/img/farmer.jpeg\")}\n                  className=\"ind-profile\"\n                />\n              </Col>\n              <Col lg=\"2\" ms=\"8\" sm=\"4\" className=\"card-blk-2\">\n                <div className=\"ind-name qwesd\">\n                  {/* <div className=\"dropdown\">\n                            <a className=\"dropdown-toggle btn-simple btn-icon srwer\" data-toggle=\"dropdown\" id=\"farmer_name\">--</a>    \n                        </div> */}\n                  <p className=\"ind_name\">{this.state.statusUser.name}</p>\n                </div>\n                <div className=\"ind-desc\">\n                  Node ID -{\" \"}\n                  <span id=\"ind_node\">\n                    {this.state.statusNode.nodeId} :{\" \"}\n                    {this.state.statusNode.cropName}\n                  </span>\n                </div>\n\n                {this.state.statusNode.pumpStatus === \"1\" ? (\n                  <div className=\"ind-desc border-blue\" id=\"pump_status\">\n                    PUMP STATUS: <span className=\"color-blue\">ON</span>\n                  </div>\n                ) : (\n                  <div className=\"ind-desc border-red\" id=\"pump_status\">\n                    PUMP STATUS: <span className=\"color-red\">OFF</span>\n                  </div>\n                )}\n              </Col>\n              <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk\">\n                <div className=\"fgrtws\">\n                  <div className=\"ind-desc qwesd\">\n                    Device ID:{\" \"}\n                    <span id=\"ind_id\">{this.state.statusUser.id}</span>\n                  </div>\n                  <div className=\"ind-desc\" style={{ opacity: \"0\" }}>\n                    Node ID - -:-\n                  </div>\n                  {this.state.statusNode.valveStatus === \"1\" ? (\n                    <div className=\"ind-desc border-blue\" id=\"valve_status\">\n                      VALVE STATUS: <span className=\"color-blue\">ON</span>\n                    </div>\n                  ) : (\n                    <div className=\"ind-desc border-red\" id=\"valve_status\">\n                      VALVE STATUS: <span className=\"color-red\">OFF</span>\n                    </div>\n                  )}\n                </div>\n              </Col>\n              <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk-4\">\n                <div className=\"fgrtws\">\n                  <div className=\"ind-desc qwesd\">\n                    Farm Size -{\" \"}\n                    <span id=\"farm_size\">\n                      {this.state.statusNode.areaSize\n                        ? this.state.statusNode.areaSize\n                        : \"--\"}\n                    </span>{\" \"}\n                    Acres\n                  </div>\n                  <div className=\"ind-desc\" style={{ opacity: \"0\" }}>\n                    Node ID - -:-\n                  </div>\n                  <div className=\"ind-desc border-gray\" id=\"dry_run\">\n                    Dry Run\n                  </div>\n                </div>\n              </Col>\n              <Col lg=\"2\" md=\"4\" sm=\"4\" className=\"card-blk\">\n                <div className=\"fgrtws\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/icons/edit.svg\")}\n                    className=\"btn-edit\"\n                  />\n                </div>\n                <div className=\"ind-desc ereuj\">\n                  <span id=\"ind_updated\">{lastUpdatedAt}</span>\n                </div>\n\n                <div className=\"ind-desc ereuj\">\n                  <span id=\"ind_updated\">\n                    {lastUpdatedAt ? lastUpdatedAt : \"--\"}\n                  </span>\n                </div>\n              </Col>\n            </Row>\n          </div>\n\n          <Row className=\"top-cards-inline\">\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <a\n                // target=\"_blank\"\n                href={\"/admin/soilmoisture/\" + this.state.nodeId}\n              >\n                <Card className={soil_moist_remark}>\n                  <CardBody>\n                    <h4 className=\"card-title\" id=\"soil_moist\">\n                      {sm ? sm : \"--\"}\n                    </h4>\n                    <p className=\"card-text\">Soil Moisture</p>\n                  </CardBody>\n                  <div className=\"card-footer\">\n                    <p className=\"card-text-bottom\" id=\"soil_moist_type\">\n                      {sm_status ? sm_status : \"--\"}\n                    </p>\n                  </div>\n                </Card>\n              </a>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className={soil_temp_remark}>\n                <CardBody>\n                  <h4 className=\"card-title\" id=\"soil_temp\">\n                    {soil_temp}\n                  </h4>\n                  <p className=\"card-text\">Soil Temprature</p>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <p\n                    className=\"card-text-bottom\"\n                    id=\"soil_temp_status\"\n                    style={{ opacity: \"0\" }}\n                  >\n                    --\n                  </p>\n                </div>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className={atm_temp_remark}>\n                <CardBody>\n                  <h4 className=\"card-title\" id=\"atm_temp\">\n                    {atm_temp}\n                  </h4>\n                  <p className=\"card-text\">Atm. Temprature</p>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <p\n                    className=\"card-text-bottom\"\n                    id=\"soil_atm_temp_status\"\n                    style={{ opacity: \"0\" }}\n                  >\n                    --\n                  </p>\n                </div>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className={hum_remark}>\n                <CardBody>\n                  <h4 className=\"card-title\" id=\"humidity\">\n                    {humid}\n                  </h4>\n                  <p className=\"card-text\">Humidity</p>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <p\n                    className=\"card-text-bottom\"\n                    id=\"soil_hum_status\"\n                    style={{ opacity: \"0\" }}\n                  >\n                    --\n                  </p>\n                </div>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className={light_remark}>\n                <CardBody>\n                  <h4 className=\"card-title\" id=\"sunlight\">\n                    {sunlight}\n                  </h4>\n                  <p className=\"card-text\">Sunlight(lux)</p>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <p\n                    className=\"card-text-bottom\"\n                    id=\"soil_sunlight_status\"\n                    style={{ opacity: \"0\" }}\n                  >\n                    --\n                  </p>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n\n          <div className=\"alets-block color-red\" style={{ display: \"none\" }}>\n            Critical Alert: Valve status is OFF | High Soil Temperature | High\n            Atm. Temperature\n          </div>\n\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <Row>\n                  <div className=\"tab-frame\">\n                    <input type=\"radio\" defaultChecked name=\"tab\" id=\"tab1\" />\n                    <label htmlFor=\"tab1\" id=\"gdsrdd\">\n                      WATER SAVED\n                    </label>\n                    <label>|</label>\n                    <input type=\"radio\" name=\"tab\" id=\"tab2\" />\n                    <label htmlFor=\"tab2\">WATER CONSUMED</label>\n\n                    <div className=\"tab\">\n                      <div className=\"card-body\">\n                        <div className=\"chart-area\" style={{ height: \"500px\" }}>\n                          <Line\n                            data={waterGraphDashboard[this.state.bigChartData]}\n                            options={waterGraphDashboard.options}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"tab\">\n                      <div className=\"card-body\">\n                        <div className=\"chart-area\" style={{ height: \"500px\" }}>\n                          <Line\n                            data={waterGraphDashboard[this.state.bigChartData1]}\n                            options={waterGraphDashboard.options}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg=\"6\">\n              <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n                <h5 className=\"card-category chart-header\">\n                  AVG. PUMP ACTIVITY\n                </h5>\n                <span>\n                  <img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} />\n                </span>\n                <select\n                  id=\"energyselect\"\n                  className=\"select_box\"\n                  onChange={(event) => {\n                    this.setState({ pumpGraph: event.target.value});\n                    this.updatePumpGraph(event.target.value);\n                  }}\n                  value={this.state.pumpGraph}\n                >\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                  <option value=\"5\">ONE YEAR</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                  <div className=\"chart-area\" style={{ marginTop: \"60px\" }}>\n                    <Bar\n                      data={pumpGraphDashboard[this.state.bigChartData]}\n                      options={pumpGraphDashboard.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\">\n              <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n                <h5 className=\"card-category chart-header\">AVG. ENERGY</h5>\n                <span>\n                  <img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} />\n                </span>\n                <select\n                  id=\"energyselect\"\n                  className=\"select_box\"\n                  onChange={(event) => {\n                    this.setState({ energyGraph: event.target.value });\n                    this.updateGraph(event.target.value);\n                  }}\n                  value={this.state.energyGraph}\n                >\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                  <option value=\"5\">ONE YEAR</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                  <div className=\"tab-frame1\">\n                    <input type=\"radio\" defaultChecked name=\"tab1\" id=\"tab11\" />\n                    <label htmlFor=\"tab11\" id=\"gdsrdd\">\n                      SAVED\n                    </label>\n                    <label>|</label>\n                    <input type=\"radio\" name=\"tab1\" id=\"tab22\" />\n                    <label htmlFor=\"tab22\">CONSUMED</label>\n\n                    <div className=\"tab1\">\n                      <div className=\"card-body\">\n                        <div className=\"chart-area\">\n                          <Bar\n                            data={energyGraphDashboard[this.state.bigChartData]}\n                            options={energyGraphDashboard.options}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"tab1\">\n                      <div className=\"card-body\">\n                        <div className=\"chart-area\">\n                          <Bar\n                            data={\n                              energyGraphDashboard[this.state.bigChartData1]\n                            }\n                            options={energyGraphDashboard.options}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg=\"12\" md=\"12\">\n              {this.state.showAlertHistoryFlag ? (\n                <AlertHistory data={this.state.allNotifications} />\n              ) : (\n                <Button\n                  onClick={() => {\n                    this.loadNotifications();\n                  }}\n                  className=\"show-all-btn\"\n                >\n                  Show Alert History\n                </Button>\n              )}\n\n              {this.state.visible < this.state.notificationsCount && (\n                <button\n                  onClick={this.loadMore}\n                  type=\"button\"\n                  className=\"load-more\"\n                >\n                  Load more\n                </button>\n              )}\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Individual;\n","import React from \"react\";\n\nimport Plot from \"react-plotly.js\";\nimport instance from \"config.js\";\nimport axios from \"axios\";\n// import Moment from \"moment\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n// import { data } from \"jquery\";\n\nconst SpinnerLoad = () => (\n  <img\n    src={require(\"assets/icons/pulse-loader.svg\")}\n    className=\"load-more-icon\"\n    alt=\"loader\"\n  />\n);\n\nclass SoilMoisture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SMdata: [],\n      date: [],\n      sm1: [],\n      sm2: [],\n      sm3: [],\n      sm4: [],\n      pumpStatus: [],\n      humidity: [],\n      soilTemp: [],\n      mode:[],\n\n      plotData : [],\n    };\n  }\n\n  componentDidMount() {\n    instance.interceptors.request.use((req) => {\n      req.headers.Authorization = localStorage.getItem(\"token\");\n      return req;\n    });\n\n    this.loadGraph();\n    let tho = this;\n    setInterval(function () {\n      tho.loadGraph();\n    }, 900000);\n  }\n\n  loadGraph(){\n     axios\n     .all([\n      //  instance.post('http://localhost:4000/graphData',{'node_id':this.props.match.params.nodeId})\n        instance.get('/soilmoisture/chart/'+ this.props.match.params.nodeId)\n      ])\n     .then(\n       axios.spread((...response) => {\n        console.log(response[0])\n         if(response[0].data.data.length !== 0){\n           this.setState({plotData:response[0].data})\n         }\n       })\n     );\n  }\n  render() {\n    \n    return (\n      <div className=\"content\">\n        <hr />\n\n        <Row>\n          <Col lg=\"12\" md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">\n                  {this.state.plotData['title']}\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                {this.state.plotData.length !== 0 ? (\n                  <Plot\n                    data = {this.state.plotData['data']}\n                    layout={this.state.plotData['layout']}\n                    useResizeHandler={true}\n                    style={{width: \"100%\" ,height:\"800px\"}}\n                  />\n                ) : (\n                  <SpinnerLoad />\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SoilMoisture;\n","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n\n\nclass Dashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dashboardStatus : [],\n      waterGraphlabel : [],\n      waterGraphConsumed : [],\n      waterGraphSaved : [],\n      energyGraphlabel : [],\n      energyGraphConsumed : [],\n      energyGraphSaved : [],\n      pumpGraphlabel : [],\n      pumpActivity : [],\n      totalAcres:\"--\",\n      bigChartData: \"data1\",\n      bigChartData1:\"data2\",\n      energyGraph:1,\n      pumpGraph:1,\n      failedNotifications : [],\n      failedNotificationsCount:1,\n      pageIndex: 0,\n      totalPages:1,\n      visible : 10,\n      refsh:false\n    };\n    this.loadMore = this.loadMore.bind(this);\n    \n  }\n  \n  componentDidMount() {\n    instance.interceptors.request.use(req => {\n      req.headers.Authorization = localStorage.getItem('token');\n      return req;\n    });\n    \n    axios.all([\n      instance.get('/dashboard/status'),\n      instance.get('/pump/activity/all/1'),\n      // instance.get('/water/graph/all'),\n      // instance.get('/energy/graph/all/1'),\n    ])\n    .then(axios.spread((...response) => {\n      console.log(response)\n      let status = response[0].data;\n      // let waterGraphlabels=[];\n      // let waterGraphc =[]\n      // let waterGraphs=[];\n      // for (var i = 0; i < response[2].data.activity.length; i++) {\n        \n      //   waterGraphlabels.push(response[2].data.activity[i].created_at);\n      //   waterGraphc.push(response[2].data.activity[i].avg_consumed);\n      //   waterGraphs.push(response[2].data.activity[i].avg_saved);\n      // }\n      // let energyGraphlabels=[];\n      // let energyGraphc =[]\n      // let energyGraphs=[];\n      // for (i = 0; i < response[3].data.activity.length; i++) {\n        \n      //   energyGraphlabels.push(response[3].data.activity[i].created_at);\n      //   energyGraphc.push(response[3].data.activity[i].avg_consumed);\n      //   energyGraphs.push(response[3].data.activity[i].avg_saved);\n      // }\n      let pumpGraphlabels = [];\n      let pumpGraphh = [];\n      if (response[1].data.activity.length !== 0) {\n        for (var i = 0; i < response[1].data.activity.length; i++) {\n          pumpGraphlabels.push(response[1].data.activity[i].created_at);\n          pumpGraphh.push(response[1].data.activity[i].totalHours);\n        }\n      }\n      this.setState({ \n        dashboardStatus: status,\n        totalAcres:status.totalAcres.totalAcres,\n        // waterGraphlabel:waterGraphlabels,\n        // waterGraphConsumed:waterGraphc,\n        // waterGraphSaved:waterGraphs,\n        // energyGraphlabel:energyGraphlabels,\n        // energyGraphConsumed:energyGraphc,\n        // energyGraphSaved:energyGraphs,\n        pumpGraphlabel:pumpGraphlabels,\n        pumpActivity:pumpGraphh \n      });\n      \n    }))\n    .catch(error => console.log(error));\n    this.loadFailedNotifications(this.state.pageIndex);\n  }\n\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n\n  updateGraph(selectval){\n    axios.all([\n      instance.get('/energy/graph/all/'+selectval)\n    ])\n    .then(axios.spread((response) => {\n      let energyGraphlabels=[];\n      let energyGraphc =[]\n      let energyGraphs=[];\n      for (var i = 0; i < response.data.activity.length; i++) {\n        energyGraphlabels.push(response.data.activity[i].created_at);\n        energyGraphc.push(response.data.activity[i].avg_consumed);\n        energyGraphs.push(response.data.activity[i].avg_saved);\n      }\n      this.setState({ energyGraphlabel:energyGraphlabels,energyGraphConsumed:energyGraphc,energyGraphSaved:energyGraphs });\n      let energylabels = this.state.energyGraphlabel;\n      let energysaved = this.state.energyGraphSaved;\n      let energyconsumed = this.state.energyGraphConsumed;\n      console.log(energylabels)\n      let energyGraphDashboard = {\n      data1: canvas => {\n        //var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n\n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: energyGraphlabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energyGraphs\n          }]\n        };\n      },\n      data2: canvas => {\n        \n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n\n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n    \n        return {\n          labels: energyGraphlabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energyGraphc\n          }]\n        };\n      },\n      options: bar2_2_options\n      };\n    \n    }))\n    .catch(error => console.log(error));\n\n  }\n\n  updatePumpGraph(selectval){\n    axios.all([\n      instance.get('/pump/activity/all/'+selectval)\n    ])\n    .then(axios.spread((response) => {\n      let pumpGraphlabels=[];\n      let pumpGraphh =[]\n      for (var i = 0; i < response.data.activity.length; i++) {\n        pumpGraphlabels.push(response.data.activity[i].created_at);\n        pumpGraphh.push(response.data.activity[i].totalHours);\n      }\n      this.setState({ pumpGraphlabel:pumpGraphlabels,pumpActivity:pumpGraphh});\n      let pumpGraphDashboard = {\n        data1: canvas => {\n          // let chartColor = \"#035272\";\n          // var yLabels = {0 : 'newb'}\n          let bar_ctx = canvas.getContext(\"2d\");\n    \n          var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n          purple_orange_gradient.addColorStop(0, '#00727b');\n          purple_orange_gradient.addColorStop(1, '#000a55');\n    \n      \n          return {\n            type: 'bar',\n            dataPointWidth: 20,\n            labels: pumpGraphlabels,\n            datasets: [{\n              label: '',\n              fill:true,\n              borderWidth: 0.5,\n              data: pumpGraphh,\n              backgroundColor: purple_orange_gradient,\n              hoverBackgroundColor: purple_orange_gradient,\n              hoverBorderWidth: 1,\n              hoverBorderColor: '#000a55'\n          }]\n          };\n        },\n        options: pump_options\n      };\n    \n    }))\n    .catch(error => console.log(error));\n\n  }\n  \n  loadFailedNotifications(){\n    console.log('called')\n    let index = this.state.pageIndex+1;\n    axios.all([\n      instance.get('/failed/notifications/'+index)\n    ])\n    .then(axios.spread((response) => {\n      if(this.state.totalPages > this.state.pageIndex){\n        this.setState({pageIndex:this.state.pageIndex+1})\n      }\n      else{\n        this.setState({lastIndexReached:true})\n      }\n      if(this.state.lastIndexReached === false){\n        this.setState({totalPages:Math.ceil(response.data.count/10)});\n      }\n      \n      this.setState({ failedNotifications:[...this.state.failedNotifications,...response.data.resp],failedNotificationsCount:response.data.count });\n      console.log(this.state.failedNotifications)\n    }))\n    .catch(error => console.log(error));\n  }\n  loadMore() {\n    this.setState((prev) => {\n      return {pageIndex: prev.pageIndex + 1,visible:prev.visible+10};\n    });\n    this.loadFailedNotifications();\n\n  }\n  \n  render() {\n    let waterlabels = this.state.waterGraphlabel;\n    let watersaved = this.state.waterGraphSaved;\n    let waterconsumed = this.state.waterGraphConsumed;\n    // console.log(waterconsumed)\n    let waterGraphDashboard = {\n      data1: canvas => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000,0,500, 0, 100, 0);\n        gradientStroke.addColorStop(0, '#035272');\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(0, 1900,400,1300, 800,1600, 50);\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n    \n        return {\n          labels: waterlabels,\n          datasets: [{\n            label: \"Data\",\n            borderColor: chartColor,\n            pointBorderColor: chartColor,\n            pointBackgroundColor: \"#1e3d60\",\n            pointHoverBackgroundColor: \"#1e3d60\",\n            pointHoverBorderColor: chartColor,\n            pointBorderWidth: 1,\n            pointHoverRadius: 7,\n            pointHoverBorderWidth: 2,\n            pointRadius: 2,\n            fill: false,\n            backgroundColor: gradientFill,\n            borderWidth: 6,\n            data: watersaved\n          }]\n        };\n      },\n      data2: canvas => {\n        let chartColor = \"#035272\";\n        let ctx = canvas.getContext(\"2d\");\n\n        var gradientStroke = ctx.createLinearGradient(1000,0,500, 0, 100, 0);\n        gradientStroke.addColorStop(0, '#035272');\n        gradientStroke.addColorStop(1, chartColor);\n\n        var gradientFill = ctx.createLinearGradient(0, 1900,400,1300, 800,1600, 50);\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n    \n        return {\n          labels: waterlabels,\n          datasets: [{\n            label: \"Data\",\n            borderColor: chartColor,\n            pointBorderColor: chartColor,\n            pointBackgroundColor: \"#1e3d60\",\n            pointHoverBackgroundColor: \"#1e3d60\",\n            pointHoverBorderColor: chartColor,\n            pointBorderWidth: 1,\n            pointHoverRadius: 7,\n            pointHoverBorderWidth: 2,\n            pointRadius: 2,\n            fill: false,\n            backgroundColor: gradientFill,\n            borderWidth: 6,\n            data: waterconsumed\n          }]\n        };\n      },\n      options: chart1_2_options\n    };\n\n    let energylabels = this.state.energyGraphlabel;\n    let energysaved = this.state.energyGraphSaved;\n    let energyconsumed = this.state.energyGraphConsumed;\n\n    let energyGraphDashboard = {\n      data1: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n  \n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: energylabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55',\n            data: energysaved\n          }]\n        };\n      },\n      data2: canvas => {\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n    \n        return {\n          labels: energylabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            data: energyconsumed,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55'\n        }]\n            \n        };\n      },\n      options: bar1_2_options\n    };\n\n    let pumplabels = this.state.pumpGraphlabel;\n    let pumpactivity = this.state.pumpActivity;\n    \n    let pumpGraphDashboard = {\n      data1: canvas => {\n        // let chartColor = \"#035272\";\n        // var yLabels = {0 : 'newb'}\n        let bar_ctx = canvas.getContext(\"2d\");\n  \n        var purple_orange_gradient = bar_ctx.createLinearGradient(0,0, 0, 300);\n        purple_orange_gradient.addColorStop(0, '#00727b');\n        purple_orange_gradient.addColorStop(1, '#000a55');\n\n    \n        return {\n          type: 'bar',\n          dataPointWidth: 20,\n          labels: pumplabels,\n          datasets: [{\n            label: '',\n            fill:true,\n            borderWidth: 0.5,\n            data: pumpactivity,\n            backgroundColor: purple_orange_gradient,\n            hoverBackgroundColor: purple_orange_gradient,\n            hoverBorderWidth: 1,\n            hoverBorderColor: '#000a55'\n        }]\n        };\n      },\n      options: pump_options\n    };\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr/>\n          <Row className=\"top-cards-inline\">\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalUsers\">{this.state.dashboardStatus.totalUsers}</h4>\n                <p className=\"card-text\">Devices Deployed</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalDevices\">{this.state.dashboardStatus.totalConnected}</h4>\n                <p className=\"card-text\">Online/Connected Devices</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalSensors\">--</h4>\n                <p className=\"card-text\">Online/Connceted Sensors</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"impYield\">--</h4>\n                <p className=\"card-text\">Improvement in Yield</p>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"2\" md=\"4\" sm=\"6\" xs=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                {/* <div className=\"dropdown\">\n                  <a className=\"dropdown-toggle btn-icon no-caret\" data-toggle=\"dropdown\">\n                    <img alt=\"...\" src={require(\"assets/icons/more.svg\")} />\n                  </a>\n                  <div className=\"dropdown-menu dropdown-menu-right\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item text-danger\" href=\"#\">Remove Data</a>\n                  </div>\n                </div> */}\n                </CardHeader>\n                <CardBody>\n                <h4 className=\"card-title\" id=\"totalAcres\">{this.state.totalAcres}</h4>\n                <p className=\"card-text\">Area covered in acres</p>\n                </CardBody>\n              </Card>\n            </Col>\n            </Row>\n         \n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                  <Row>\n                    <div className=\"tab-frame\">\n                      <input type=\"radio\" defaultChecked name=\"tab\" id=\"tab1\" />\n                      <label htmlFor=\"tab1\" id=\"gdsrdd\">WATER SAVED</label>\n                      <label>|</label>  \n                      <input type=\"radio\" name=\"tab\" id=\"tab2\" />\n                      <label htmlFor=\"tab2\">WATER CONSUMED</label>\n             \n                      <div className=\"tab\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\" style={{height:'500px'}}>\n                            <Line\n                              data={waterGraphDashboard[this.state.bigChartData]}\n                              options={waterGraphDashboard.options}\n                            />\n                            \n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tab\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\" style={{height:'500px'}}>\n                            <Line\n                              data={waterGraphDashboard[this.state.bigChartData1]}\n                              options={waterGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </Row>\n              </Card>\n            </Col>\n          </Row>\n          \n          <Row>\n            <Col lg=\"6\">\n              <div style={{display: 'flex',marginBottom: '5px'}}>\n                <h5 className=\"card-category chart-header\">AVG. PUMP ACTIVITY</h5>\n                <span><img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} /></span>\n                <select id=\"energyselect\" className=\"select_box\" onChange={(event)=>{this.setState({pumpGraph:event.target.value});this.updatePumpGraph(event.target.value)}} value={this.state.pumpGraph}>\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                  <option value=\"5\">ONE YEAR</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                  <div className=\"chart-area\" style={{marginTop:'60px'}}>\n                    <Bar\n                      data={pumpGraphDashboard[this.state.bigChartData]}\n                      options={pumpGraphDashboard.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\">\n              <div style={{display: 'flex',marginBottom: '5px'}}>\n                <h5 className=\"card-category chart-header\">AVG. ENERGY</h5>\n                <span><img alt=\"...\" src={require(\"assets/icons/calendar.svg\")} /></span>\n                <select id=\"energyselect\" className=\"select_box\" onChange={(event)=>{this.setState({energyGraph:event.target.value});this.updateGraph(event.target.value)}} value={this.state.energyGraph}>\n                  <option value=\"1\">ONE WEEK</option>\n                  <option value=\"2\">ONE MONTH</option>\n                  <option value=\"3\">THREE MONTH</option>\n                  <option value=\"4\">SIX MONTH</option>\n                  <option value=\"5\">ONE YEAR</option>\n                </select>\n              </div>\n              <Card className=\"card-chart\">\n                <CardBody>\n                <div className=\"tab-frame1\">\n                      <input type=\"radio\" defaultChecked name=\"tab1\" id=\"tab11\" />\n                      <label htmlFor=\"tab11\" id=\"gdsrdd\">SAVED</label>\n                      <label>|</label>  \n                      <input type=\"radio\" name=\"tab1\" id=\"tab22\" />\n                      <label htmlFor=\"tab22\">CONSUMED</label>\n             \n                      <div className=\"tab1\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\">\n                            <Bar\n                              data={energyGraphDashboard[this.state.bigChartData]}\n                              options={energyGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"tab1\">\n                        <div className=\"card-body\">\n                          <div className=\"chart-area\">\n                            <Bar\n                              data={energyGraphDashboard[this.state.bigChartData1]}\n                              options={energyGraphDashboard.options}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n                  \n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          \n          <Row>\n            <Col lg=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Failed Notifications</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" id=\"failednotification\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Reason</th>\n                        <th>Device ID</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* <Rows data={this.state.failedNotifications}/> */}\n                      {this.state.failedNotifications.map((s, i) => {\n                      let createdAt = new Date(s.created_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                      let date = Moment(createdAt).format('YYYY/MM/DD');\n                      let time = Moment(createdAt).format('HH:mm:ss');\n                      \n                      return (\n                        <tr key={i}>\n                          <td><img alt=\"...\" src={s.profile_pic ? s.profile_pic : require('assets/icons/farmer.png')} className=\"mini-profile\" /></td>\n                          <td>{s.name}</td><td>{s.text}</td>\n                          <td>{s.id}</td><td>{date}</td>\n                          <td>{time}</td>\n                        </tr>\n                      );\n                    })}\n                    </tbody>\n                  </Table>\n                  \n                </CardBody>\n                {this.state.visible < this.state.failedNotificationsCount &&\n                    <button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</button>\n                  }\n              </Card>\n            </Col>\n          </Row>\n        \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst SpinnerLoad = () =>(\n  <img src={require(\"assets/icons/pulse-loader.svg\")} className=\"load-more-icon\" />\n)\n\nclass Users extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersArr : [],\n      usersArrCount:0,\n      pageIndex: 0,\n      totalPages:1,\n      visible : 10,\n      isloading:false\n    };\n    this.loadMore = this.loadMore.bind(this);\n  }\n  \n  componentDidMount() {\n    console.log(\"sub\",localStorage.getItem('admin_sub'))\n    if(localStorage.getItem('admin_sub') == 1){\n      \n      this.loadUsers(this.state.pageIndex);\n    }\n    else{\n      this.loadSingleUser()\n    }\n  }\n  \n  loadSingleUser(){\n    this.setState({isloading:true});\n    let index = this.state.pageIndex+1;\n    axios.all([\n      instance.get('/singleuser/'+index)\n    ])\n    .then(axios.spread((response) => {\n      this.setState({isloading:false});\n      if(this.state.totalPages > this.state.pageIndex){\n        this.setState({pageIndex:this.state.pageIndex+1})\n      }\n      else{\n        this.setState({lastIndexReached:true})\n      }\n      if(this.state.lastIndexReached == false){\n        this.setState({totalPages:Math.ceil(response.data.count/10)});\n      }\n      \n      this.setState({ usersArr:[...this.state.usersArr,...response.data.output],usersArrCount:response.data.count });\n      console.log(this.state.usersArr)\n    }))\n    .catch(error => console.log(error));\n  }\n  \n  loadUsers(){\n    console.log('called')\n    this.setState({isloading:true});\n    let index = this.state.pageIndex+1;\n    axios.all([\n      instance.get('/users/'+index)\n    ])\n    .then(axios.spread((response) => {\n      this.setState({isloading:false});\n      if(this.state.totalPages > this.state.pageIndex){\n        this.setState({pageIndex:this.state.pageIndex+1})\n      }\n      else{\n        this.setState({lastIndexReached:true})\n      }\n      if(this.state.lastIndexReached == false){\n        this.setState({totalPages:Math.ceil(response.data.count/10)});\n      }\n      \n      this.setState({ usersArr:[...this.state.usersArr,...response.data.output],usersArrCount:response.data.count });\n      console.log(this.state.usersArr)\n    }))\n    .catch(error => console.log(error));\n  }\n\n  loadMore() {\n    this.setState((prev) => {\n      return {pageIndex: prev.pageIndex + 1,visible:prev.visible+10};\n    });\n    this.loadUsers();\n  }\n\n  \n  render() {\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr/>\n          \n          <Row>\n            <Col lg=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">SICCA Device Users</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"device_user\" id=\"users\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Device Id</th>\n                        <th>Nodes</th>\n                        <th>Node Created At</th>\n                        <th>Land Size</th>\n                        <th>Place</th>\n                        <th>User Created At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.usersArr.map((s, i) => {\n                       \n                        let updated_at = new Date(s.user.updated_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                        let date = Moment(updated_at).format('L HH:mm:ss');\n                        let total_land_size = s.user.total_land_size==null?'-':s.user.total_land_size+' Acres'\n                        \n                        \n                        let nodelist = s.nodes.map((n,j) => {  \n                          let nodeInfo = n.node_id+' : '+n.crop_name;\n                          return(<a key={j} style={{color:'#007D7F',textDecoration:'underline'}} href={\"/admin/individual/\"+n.node_id}>{nodeInfo}</a>);\n                        });\n                        let nodeCreatedAt = s.nodes.map((n,j) => {\n                          let created_at = new Date(n.created_at).toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n                          let nodeDate = Moment(created_at).format('L HH:mm:ss');\n                          return(<p className=\"nodeCreatedDate\">{nodeDate}</p>);\n                        });\n                        \n                        return (<tr key={i}>\n                                <td><img src={s.profile_pic ? s.profile_pic : require('assets/icons/farmer.png')} className=\"mini-profile\" /></td>\n                                <td><p>{s.user.name}</p></td>\n                                <td><p>{s.user.id}</p></td>\n                                <td>{nodelist}</td>\n                                <td>{nodeCreatedAt}</td>\n                                <td><p>{total_land_size}</p></td>\n                                <td><p>{s.user.village}</p></td>\n                                <td><p>{date}</p></td>\n                              </tr>);\n                            })}\n                    </tbody>\n                  </Table>\n                  \n                </CardBody>\n                <div style={{position:'relative'}}>\n                  {this.state.visible < this.state.usersArrCount &&\n                    <Button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</Button>\n                  }\n                  {this.state.isloading && this.state.visible < this.state.usersArrCount?<SpinnerLoad/>:''}\n                </div>\n                <h5>{this.state.isloading}</h5>\n              </Card>\n            </Col>\n          </Row>\n        \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import React,{setState} from \"react\";\n\nclass Alerts extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isloading:false\n    };\n  }\n  \n  render() {\n\n    return (\n      <>\n        <div className=\"content\">\n          <hr/>\n          \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Alerts;\n","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n\n\nclass DeviceManagement extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible : 10,\n      refsh:false\n    };\n    \n  }\n  \n  render() {\n    \n    return (\n      <>\n        <div className=\"content\">\n         \n        </div>\n      </>\n    );\n  }\n}\n\nexport default DeviceManagement;\n","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n\n\nclass Support extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      visible : 10,\n      refsh:false\n    };\n    \n  }\n  \n  \n  render() {\n    \n\n    return (\n      <>\n        <div className=\"content\">\n         \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Support;\n","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport axios from \"axios\";\nimport instance from 'config.js';\nimport Moment from 'moment';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chart1_2_options,\n  bar1_2_options,\n  bar2_2_options,\n  pump_options,\n} from \"variables/charts.js\";\n\n\nclass AccessControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      visible : 10,\n      refsh:false\n    };\n    \n  }\n  \n  \n  render() {\n    \n\n    return (\n      <>\n        <div className=\"content\">\n         \n        </div>\n      </>\n    );\n  }\n}\n\nexport default AccessControl;\n","import Dashboard from \"views/Dashboard.js\";\nimport Users from \"views/Users.js\";\nimport Alerts from \"views/Alerts.js\";\nimport DeviceManagement from \"views/DeviceManagement.js\";\nimport Support from \"views/Support.js\";\nimport AccessControl from \"views/AccessControl.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    iconClass: \"left-menu-icon\",\n    icon: require(\"assets/icons/Dashboard.svg\"),\n    component: Dashboard,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    iconClass: \"left-menu-icon\",\n    icon: require(\"assets/icons/Users icon.svg\"),\n    component: Users,\n    layout: \"/admin\"\n  },\n  {\n    path:\"/alerts\",\n    name:\"Alerts\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Alerts icon.svg\"),\n    component: Alerts,\n    layout:\"/admin\"\n  },\n  {\n    path:\"/devicemanagement\",\n    name:\"Device Management\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Device Management.svg\"),\n    component: DeviceManagement,\n    layout:\"/admin\"\n  },\n  {\n    path:\"/support\",\n    name:\"Support\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Support.svg\"),\n    component: Support,\n    layout:\"/admin\"\n  },\n  {\n    path:\"/accesscontrol\",\n    name:\"Access Control\",\n    iconClass:\"left-menu-icon\",\n    icon:require(\"assets/icons/Access Icon.svg\"),\n    component: AccessControl,\n    layout:\"/admin\"\n  },\n  // {\n  //   path:\"/soilmoisture\",\n  //   name:\"Soil Moisture\",\n  //   iconClass:\"left-menu-icon\",\n  //   icon:require(\"assets/icons/line-chart.svg\"),\n  //   component: SoilMoisture,\n  //   layout:\"/admin\"\n  // },\n  // {\n  //   path:\"/individual\",\n  //   name:\"\",\n  //   iconClass:\"\",\n  //   component: Individual,\n  //   layout:\"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   iconClass: \"left-menu-icon\",\n  //   icon: require(\"assets/icons/Dashboard.svg\"),\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Table List\",\n  //   rtlName: \"قائمة الجدول\",\n  //   iconClass: \"left-menu-icon\",\n  //   icon: require(\"assets/icons/Dashboard.svg\"),\n  //   component: TableList,\n  //   layout: \"/admin\"\n  // }\n];\nexport default routes;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common';\n\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n  // console.log(\"getToken:\",getToken());\n  return (\n    <Route\n      {...rest}\n      render={(props) => getToken() != null ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n \nexport default PrivateRoute;","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport Individual from \"views/Individual\";\nimport SoilMoisture from \"views/SoilMoisture\";\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nimport PrivateRoute from 'Utils/PrivateRoute';\n\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <PrivateRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"#\",\n              text: \"Gramin Admin\",\n              imgSrc: logo\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              {/* <Redirect from=\"*\" to=\"/admin/dashboard\"/> */}\n              {<PrivateRoute exact component={Individual} path=\"/admin/individual/:nodeId\" />}\n              {<PrivateRoute exact component={SoilMoisture} path=\"/admin/soilmoisture/:nodeId\" />}\n            </Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        \n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BASE_URL from \"requests.js\";\nimport { setUserSession } from \"Utils/Common\";\nimport jwt from \"jwt-decode\";\n\nfunction Login(props) {\n  const email = useFormInput(\"\");\n  const password = useFormInput(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios\n      .post(BASE_URL + \"/login\", {\n        email: email.value,\n        password: password.value,\n      })\n      .then((response) => {\n        \n        if (response.data.token) {\n\n          localStorage.setItem(\"token\", response.data.token);\n          setUserSession(response.data.token);\n\n          const token = jwt(response.data.token);\n          localStorage.setItem(\"admin_sub\", token.sub);\n\n          if (token.sub == 2) {\n            setTimeout(function () {\n              props.history.push(\"/admin/users\");\n            }, 1000);\n          } else {\n            setTimeout(function () {\n              props.history.push(\"/admin/dashboard\");\n            }, 1000);\n          }\n        }\n        else{\n          setError(response.data.error);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.response.status === 401)\n          setError(error.response.data.message);\n        else setError(\"Something went wrong. Please try again later.\");\n      });\n  };\n\n  return (\n    <div className=\"box\">\n      <div className=\"login-form\">\n        <h1>Login</h1>\n        <br />\n        <div>\n          Email\n          <br />\n          <input type=\"text\" {...email} />\n        </div>\n        <div style={{ marginTop: 10 }}>\n          Password\n          <br />\n          <input type=\"password\" {...password} autoComplete=\"new-password\" />\n        </div>\n        {error && (\n          <>\n            <small style={{ color: \"red\" }}>{error}</small>\n            <br />\n          </>\n        )}\n        <br />\n        <input\n          type=\"button\"\n          value={loading ? \"Loading...\" : \"Login\"}\n          onClick={handleLogin}\n          disabled={loading}\n        />\n        <br />\n      </div>\n    </div>\n  );\n}\n\nconst useFormInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return {\n    value,\n    onChange: handleChange,\n  };\n};\n\nexport default Login;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport Login from \"components/Login/Login.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Route exact path=\"/login\" component={Login} render={props =>null} />\n      {/* <Redirect from=\"/\" to=\"/admin/dashboard\" /> */}\n    </Switch>\n  </Router>,\n  \n  document.getElementById(\"root\")\n  // ReactDOM.render(<App />, document.getElementById('root'));\n);\n","module.exports = __webpack_public_path__ + \"static/media/calendar.9f1f118b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pulse-loader.387f0057.svg\";","module.exports = __webpack_public_path__ + \"static/media/farmer.d8a57b3b.png\";"],"sourceRoot":""}